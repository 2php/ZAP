mem[          0]=  0
mem[          1]=  0
mem[          2]=  0
mem[          3]=  0
mem[          4]=  0
mem[          5]=  0
mem[          6]=  0
mem[          7]=  0
mem[          8]=  0
mem[          9]=  0
mem[         10]=  0
mem[         11]=  0
mem[         12]=  0
mem[         13]=  0
mem[         14]=  0
mem[         15]=  0
mem[         16]=  0
mem[         17]=  0
mem[         18]=  0
mem[         19]=  0
mem[         20]=  0
mem[         21]=  0
mem[         22]=  0
mem[         23]=  0
mem[         24]=  0
mem[         25]=  0
mem[         26]=  0
mem[         27]=  0
mem[         28]=  0
mem[         29]=  0
mem[         30]=  0
mem[         31]=  0
mem[         32]=  0
mem[         33]=  0
mem[         34]=  0
mem[         35]=  0
mem[         36]=  0
mem[         37]=  0
mem[         38]=  0
mem[         39]=  0
mem[         40]=  0
mem[         41]=  0
mem[         42]=  0
mem[         43]=  0
mem[         44]=  0
mem[         45]=  0
mem[         46]=  0
mem[         47]=  0
mem[         48]=  0
mem[         49]=  0
mem[         50]=  0
mem[         51]=  0
mem[         52]=  0
mem[         53]=  0
mem[         54]=  0
mem[         55]=  0
mem[         56]=  0
mem[         57]=  0
mem[         58]=  0
mem[         59]=  0
mem[         60]=  0
mem[         61]=  0
mem[         62]=  0
mem[         63]=  0
mem[         64]=  0
mem[         65]=  0
mem[         66]=  0
mem[         67]=  0
mem[         68]=  0
mem[         69]=  0
mem[         70]=  0
mem[         71]=  0
mem[         72]=  0
mem[         73]=  0
mem[         74]=  0
mem[         75]=  0
mem[         76]=  0
mem[         77]=  0
mem[         78]=  0
mem[         79]=  0
mem[         80]=  0
mem[         81]=  0
mem[         82]=  0
mem[         83]=  0
mem[         84]=  0
mem[         85]=  0
mem[         86]=  0
mem[         87]=  0
mem[         88]=  0
mem[         89]=  0
mem[         90]=  0
mem[         91]=  0
mem[         92]=  0
mem[         93]=  0
mem[         94]=  0
mem[         95]=  0
mem[         96]=  0
mem[         97]=  0
mem[         98]=  0
mem[         99]=  0
mem[        100]=  0
mem[        101]=  0
mem[        102]=  0
mem[        103]=  0
mem[        104]=  0
mem[        105]=  0
mem[        106]=  0
mem[        107]=  0
mem[        108]=  0
mem[        109]=  0
mem[        110]=  0
mem[        111]=  0
mem[        112]=  0
mem[        113]=  0
mem[        114]=  0
mem[        115]=  0
mem[        116]=  0
mem[        117]=  0
mem[        118]=  0
mem[        119]=  0
mem[        120]=  0
mem[        121]=  0
mem[        122]=  0
mem[        123]=  0
mem[        124]=  0
mem[        125]=  0
mem[        126]=  0
mem[        127]=  0
mem[        128]=  0
mem[        129]=  0
mem[        130]=  0
mem[        131]=  0
mem[        132]=  0
mem[        133]=  0
mem[        134]=  0
mem[        135]=  0
mem[        136]=  0
mem[        137]=  0
mem[        138]=  0
mem[        139]=  0
mem[        140]=  0
mem[        141]=  0
mem[        142]=  0
mem[        143]=  0
mem[        144]=  0
mem[        145]=  0
mem[        146]=  0
mem[        147]=  0
mem[        148]=  0
mem[        149]=  0
mem[        150]=  0
mem[        151]=  0
mem[        152]=  0
mem[        153]=  0
mem[        154]=  0
mem[        155]=  0
mem[        156]=  0
mem[        157]=  0
mem[        158]=  0
mem[        159]=  0
mem[        160]=  0
mem[        161]=  0
mem[        162]=  0
mem[        163]=  0
mem[        164]=  0
mem[        165]=  0
mem[        166]=  0
mem[        167]=  0
mem[        168]=  0
mem[        169]=  0
mem[        170]=  0
mem[        171]=  0
mem[        172]=  0
mem[        173]=  0
mem[        174]=  0
mem[        175]=  0
mem[        176]=  0
mem[        177]=  0
mem[        178]=  0
mem[        179]=  0
mem[        180]=  0
mem[        181]=  0
mem[        182]=  0
mem[        183]=  0
mem[        184]=  0
mem[        185]=  0
mem[        186]=  0
mem[        187]=  0
mem[        188]=  0
mem[        189]=  0
mem[        190]=  0
mem[        191]=  0
mem[        192]=  0
mem[        193]=  0
mem[        194]=  0
mem[        195]=  0
mem[        196]=  0
mem[        197]=  0
mem[        198]=  0
mem[        199]=  0
mem[        200]=  0
mem[        201]=  0
mem[        202]=  0
mem[        203]=  0
mem[        204]=  0
mem[        205]=  0
mem[        206]=  0
mem[        207]=  0
mem[        208]=  0
mem[        209]=  0
mem[        210]=  0
mem[        211]=  0
mem[        212]=  0
mem[        213]=  0
mem[        214]=  0
mem[        215]=  0
mem[        216]=  0
mem[        217]=  0
mem[        218]=  0
mem[        219]=  0
mem[        220]=  0
mem[        221]=  0
mem[        222]=  0
mem[        223]=  0
mem[        224]=  0
mem[        225]=  0
mem[        226]=  0
mem[        227]=  0
mem[        228]=  0
mem[        229]=  0
mem[        230]=  0
mem[        231]=  0
mem[        232]=  0
mem[        233]=  0
mem[        234]=  0
mem[        235]=  0
mem[        236]=  0
mem[        237]=  0
mem[        238]=  0
mem[        239]=  0
mem[        240]=  0
mem[        241]=  0
mem[        242]=  0
mem[        243]=  0
mem[        244]=  0
mem[        245]=  0
mem[        246]=  0
mem[        247]=  0
mem[        248]=  0
mem[        249]=  0
mem[        250]=  0
mem[        251]=  0
mem[        252]=  0
mem[        253]=  0
mem[        254]=  0
mem[        255]=  0
mem[        256]=  0
mem[        257]=  0
mem[        258]=  0
mem[        259]=  0
mem[        260]=  0
mem[        261]=  0
mem[        262]=  0
mem[        263]=  0
mem[        264]=  0
mem[        265]=  0
mem[        266]=  0
mem[        267]=  0
mem[        268]=  0
mem[        269]=  0
mem[        270]=  0
mem[        271]=  0
mem[        272]=  0
mem[        273]=  0
mem[        274]=  0
mem[        275]=  0
mem[        276]=  0
mem[        277]=  0
mem[        278]=  0
mem[        279]=  0
mem[        280]=  0
mem[        281]=  0
mem[        282]=  0
mem[        283]=  0
mem[        284]=  0
mem[        285]=  0
mem[        286]=  0
mem[        287]=  0
mem[        288]=  0
mem[        289]=  0
mem[        290]=  0
mem[        291]=  0
mem[        292]=  0
mem[        293]=  0
mem[        294]=  0
mem[        295]=  0
mem[        296]=  0
mem[        297]=  0
mem[        298]=  0
mem[        299]=  0
mem[        300]=  0
mem[        301]=  0
mem[        302]=  0
mem[        303]=  0
mem[        304]=  0
mem[        305]=  0
mem[        306]=  0
mem[        307]=  0
mem[        308]=  0
mem[        309]=  0
mem[        310]=  0
mem[        311]=  0
mem[        312]=  0
mem[        313]=  0
mem[        314]=  0
mem[        315]=  0
mem[        316]=  0
mem[        317]=  0
mem[        318]=  0
mem[        319]=  0
mem[        320]=  0
mem[        321]=  0
mem[        322]=  0
mem[        323]=  0
mem[        324]=  0
mem[        325]=  0
mem[        326]=  0
mem[        327]=  0
mem[        328]=  0
mem[        329]=  0
mem[        330]=  0
mem[        331]=  0
mem[        332]=  0
mem[        333]=  0
mem[        334]=  0
mem[        335]=  0
mem[        336]=  0
mem[        337]=  0
mem[        338]=  0
mem[        339]=  0
mem[        340]=  0
mem[        341]=  0
mem[        342]=  0
mem[        343]=  0
mem[        344]=  0
mem[        345]=  0
mem[        346]=  0
mem[        347]=  0
mem[        348]=  0
mem[        349]=  0
mem[        350]=  0
mem[        351]=  0
mem[        352]=  0
mem[        353]=  0
mem[        354]=  0
mem[        355]=  0
mem[        356]=  0
mem[        357]=  0
mem[        358]=  0
mem[        359]=  0
mem[        360]=  0
mem[        361]=  0
mem[        362]=  0
mem[        363]=  0
mem[        364]=  0
mem[        365]=  0
mem[        366]=  0
mem[        367]=  0
mem[        368]=  0
mem[        369]=  0
mem[        370]=  0
mem[        371]=  0
mem[        372]=  0
mem[        373]=  0
mem[        374]=  0
mem[        375]=  0
mem[        376]=  0
mem[        377]=  0
mem[        378]=  0
mem[        379]=  0
mem[        380]=  0
mem[        381]=  0
mem[        382]=  0
mem[        383]=  0
mem[        384]=  0
mem[        385]=  0
mem[        386]=  0
mem[        387]=  0
mem[        388]=  0
mem[        389]=  0
mem[        390]=  0
mem[        391]=  0
mem[        392]=  0
mem[        393]=  0
mem[        394]=  0
mem[        395]=  0
mem[        396]=  0
mem[        397]=  0
mem[        398]=  0
mem[        399]=  0
mem[        400]=  0
mem[        401]=  0
mem[        402]=  0
mem[        403]=  0
mem[        404]=  0
mem[        405]=  0
mem[        406]=  0
mem[        407]=  0
mem[        408]=  0
mem[        409]=  0
mem[        410]=  0
mem[        411]=  0
mem[        412]=  0
mem[        413]=  0
mem[        414]=  0
mem[        415]=  0
mem[        416]=  0
mem[        417]=  0
mem[        418]=  0
mem[        419]=  0
mem[        420]=  0
mem[        421]=  0
mem[        422]=  0
mem[        423]=  0
mem[        424]=  0
mem[        425]=  0
mem[        426]=  0
mem[        427]=  0
mem[        428]=  0
mem[        429]=  0
mem[        430]=  0
mem[        431]=  0
mem[        432]=  0
mem[        433]=  0
mem[        434]=  0
mem[        435]=  0
mem[        436]=  0
mem[        437]=  0
mem[        438]=  0
mem[        439]=  0
mem[        440]=  0
mem[        441]=  0
mem[        442]=  0
mem[        443]=  0
mem[        444]=  0
mem[        445]=  0
mem[        446]=  0
mem[        447]=  0
mem[        448]=  0
mem[        449]=  0
mem[        450]=  0
mem[        451]=  0
mem[        452]=  0
mem[        453]=  0
mem[        454]=  0
mem[        455]=  0
mem[        456]=  0
mem[        457]=  0
mem[        458]=  0
mem[        459]=  0
mem[        460]=  0
mem[        461]=  0
mem[        462]=  0
mem[        463]=  0
mem[        464]=  0
mem[        465]=  0
mem[        466]=  0
mem[        467]=  0
mem[        468]=  0
mem[        469]=  0
mem[        470]=  0
mem[        471]=  0
mem[        472]=  0
mem[        473]=  0
mem[        474]=  0
mem[        475]=  0
mem[        476]=  0
mem[        477]=  0
mem[        478]=  0
mem[        479]=  0
mem[        480]=  0
mem[        481]=  0
mem[        482]=  0
mem[        483]=  0
mem[        484]=  0
mem[        485]=  0
mem[        486]=  0
mem[        487]=  0
mem[        488]=  0
mem[        489]=  0
mem[        490]=  0
mem[        491]=  0
mem[        492]=  0
mem[        493]=  0
mem[        494]=  0
mem[        495]=  0
mem[        496]=  0
mem[        497]=  0
mem[        498]=  0
mem[        499]=  0
mem[        500]=  0
mem[        501]=  0
mem[        502]=  0
mem[        503]=  0
mem[        504]=  0
mem[        505]=  0
mem[        506]=  0
mem[        507]=  0
mem[        508]=  0
mem[        509]=  0
mem[        510]=  0
mem[        511]=  0
mem[        512]=  0
mem[        513]=  0
mem[        514]=  0
mem[        515]=  0
mem[        516]=  0
mem[        517]=  0
mem[        518]=  0
mem[        519]=  0
mem[        520]=  0
mem[        521]=  0
mem[        522]=  0
mem[        523]=  0
mem[        524]=  0
mem[        525]=  0
mem[        526]=  0
mem[        527]=  0
mem[        528]=  0
mem[        529]=  0
mem[        530]=  0
mem[        531]=  0
mem[        532]=  0
mem[        533]=  0
mem[        534]=  0
mem[        535]=  0
mem[        536]=  0
mem[        537]=  0
mem[        538]=  0
mem[        539]=  0
mem[        540]=  0
mem[        541]=  0
mem[        542]=  0
mem[        543]=  0
mem[        544]=  0
mem[        545]=  0
mem[        546]=  0
mem[        547]=  0
mem[        548]=  0
mem[        549]=  0
mem[        550]=  0
mem[        551]=  0
mem[        552]=  0
mem[        553]=  0
mem[        554]=  0
mem[        555]=  0
mem[        556]=  0
mem[        557]=  0
mem[        558]=  0
mem[        559]=  0
mem[        560]=  0
mem[        561]=  0
mem[        562]=  0
mem[        563]=  0
mem[        564]=  0
mem[        565]=  0
mem[        566]=  0
mem[        567]=  0
mem[        568]=  0
mem[        569]=  0
mem[        570]=  0
mem[        571]=  0
mem[        572]=  0
mem[        573]=  0
mem[        574]=  0
mem[        575]=  0
mem[        576]=  0
mem[        577]=  0
mem[        578]=  0
mem[        579]=  0
mem[        580]=  0
mem[        581]=  0
mem[        582]=  0
mem[        583]=  0
mem[        584]=  0
mem[        585]=  0
mem[        586]=  0
mem[        587]=  0
mem[        588]=  0
mem[        589]=  0
mem[        590]=  0
mem[        591]=  0
mem[        592]=  0
mem[        593]=  0
mem[        594]=  0
mem[        595]=  0
mem[        596]=  0
mem[        597]=  0
mem[        598]=  0
mem[        599]=  0
mem[        600]=  0
mem[        601]=  0
mem[        602]=  0
mem[        603]=  0
mem[        604]=  0
mem[        605]=  0
mem[        606]=  0
mem[        607]=  0
mem[        608]=  0
mem[        609]=  0
mem[        610]=  0
mem[        611]=  0
mem[        612]=  0
mem[        613]=  0
mem[        614]=  0
mem[        615]=  0
mem[        616]=  0
mem[        617]=  0
mem[        618]=  0
mem[        619]=  0
mem[        620]=  0
mem[        621]=  0
mem[        622]=  0
mem[        623]=  0
mem[        624]=  0
mem[        625]=  0
mem[        626]=  0
mem[        627]=  0
mem[        628]=  0
mem[        629]=  0
mem[        630]=  0
mem[        631]=  0
mem[        632]=  0
mem[        633]=  0
mem[        634]=  0
mem[        635]=  0
mem[        636]=  0
mem[        637]=  0
mem[        638]=  0
mem[        639]=  0
mem[        640]=  0
mem[        641]=  0
mem[        642]=  0
mem[        643]=  0
mem[        644]=  0
mem[        645]=  0
mem[        646]=  0
mem[        647]=  0
mem[        648]=  0
mem[        649]=  0
mem[        650]=  0
mem[        651]=  0
mem[        652]=  0
mem[        653]=  0
mem[        654]=  0
mem[        655]=  0
mem[        656]=  0
mem[        657]=  0
mem[        658]=  0
mem[        659]=  0
mem[        660]=  0
mem[        661]=  0
mem[        662]=  0
mem[        663]=  0
mem[        664]=  0
mem[        665]=  0
mem[        666]=  0
mem[        667]=  0
mem[        668]=  0
mem[        669]=  0
mem[        670]=  0
mem[        671]=  0
mem[        672]=  0
mem[        673]=  0
mem[        674]=  0
mem[        675]=  0
mem[        676]=  0
mem[        677]=  0
mem[        678]=  0
mem[        679]=  0
mem[        680]=  0
mem[        681]=  0
mem[        682]=  0
mem[        683]=  0
mem[        684]=  0
mem[        685]=  0
mem[        686]=  0
mem[        687]=  0
mem[        688]=  0
mem[        689]=  0
mem[        690]=  0
mem[        691]=  0
mem[        692]=  0
mem[        693]=  0
mem[        694]=  0
mem[        695]=  0
mem[        696]=  0
mem[        697]=  0
mem[        698]=  0
mem[        699]=  0
mem[        700]=  0
mem[        701]=  0
mem[        702]=  0
mem[        703]=  0
mem[        704]=  0
mem[        705]=  0
mem[        706]=  0
mem[        707]=  0
mem[        708]=  0
mem[        709]=  0
mem[        710]=  0
mem[        711]=  0
mem[        712]=  0
mem[        713]=  0
mem[        714]=  0
mem[        715]=  0
mem[        716]=  0
mem[        717]=  0
mem[        718]=  0
mem[        719]=  0
mem[        720]=  0
mem[        721]=  0
mem[        722]=  0
mem[        723]=  0
mem[        724]=  0
mem[        725]=  0
mem[        726]=  0
mem[        727]=  0
mem[        728]=  0
mem[        729]=  0
mem[        730]=  0
mem[        731]=  0
mem[        732]=  0
mem[        733]=  0
mem[        734]=  0
mem[        735]=  0
mem[        736]=  0
mem[        737]=  0
mem[        738]=  0
mem[        739]=  0
mem[        740]=  0
mem[        741]=  0
mem[        742]=  0
mem[        743]=  0
mem[        744]=  0
mem[        745]=  0
mem[        746]=  0
mem[        747]=  0
mem[        748]=  0
mem[        749]=  0
mem[        750]=  0
mem[        751]=  0
mem[        752]=  0
mem[        753]=  0
mem[        754]=  0
mem[        755]=  0
mem[        756]=  0
mem[        757]=  0
mem[        758]=  0
mem[        759]=  0
mem[        760]=  0
mem[        761]=  0
mem[        762]=  0
mem[        763]=  0
mem[        764]=  0
mem[        765]=  0
mem[        766]=  0
mem[        767]=  0
mem[        768]=  0
mem[        769]=  0
mem[        770]=  0
mem[        771]=  0
mem[        772]=  0
mem[        773]=  0
mem[        774]=  0
mem[        775]=  0
mem[        776]=  0
mem[        777]=  0
mem[        778]=  0
mem[        779]=  0
mem[        780]=  0
mem[        781]=  0
mem[        782]=  0
mem[        783]=  0
mem[        784]=  0
mem[        785]=  0
mem[        786]=  0
mem[        787]=  0
mem[        788]=  0
mem[        789]=  0
mem[        790]=  0
mem[        791]=  0
mem[        792]=  0
mem[        793]=  0
mem[        794]=  0
mem[        795]=  0
mem[        796]=  0
mem[        797]=  0
mem[        798]=  0
mem[        799]=  0
mem[        800]=  0
mem[        801]=  0
mem[        802]=  0
mem[        803]=  0
mem[        804]=  0
mem[        805]=  0
mem[        806]=  0
mem[        807]=  0
mem[        808]=  0
mem[        809]=  0
mem[        810]=  0
mem[        811]=  0
mem[        812]=  0
mem[        813]=  0
mem[        814]=  0
mem[        815]=  0
mem[        816]=  0
mem[        817]=  0
mem[        818]=  0
mem[        819]=  0
mem[        820]=  0
mem[        821]=  0
mem[        822]=  0
mem[        823]=  0
mem[        824]=  0
mem[        825]=  0
mem[        826]=  0
mem[        827]=  0
mem[        828]=  0
mem[        829]=  0
mem[        830]=  0
mem[        831]=  0
mem[        832]=  0
mem[        833]=  0
mem[        834]=  0
mem[        835]=  0
mem[        836]=  0
mem[        837]=  0
mem[        838]=  0
mem[        839]=  0
mem[        840]=  0
mem[        841]=  0
mem[        842]=  0
mem[        843]=  0
mem[        844]=  0
mem[        845]=  0
mem[        846]=  0
mem[        847]=  0
mem[        848]=  0
mem[        849]=  0
mem[        850]=  0
mem[        851]=  0
mem[        852]=  0
mem[        853]=  0
mem[        854]=  0
mem[        855]=  0
mem[        856]=  0
mem[        857]=  0
mem[        858]=  0
mem[        859]=  0
mem[        860]=  0
mem[        861]=  0
mem[        862]=  0
mem[        863]=  0
mem[        864]=  0
mem[        865]=  0
mem[        866]=  0
mem[        867]=  0
mem[        868]=  0
mem[        869]=  0
mem[        870]=  0
mem[        871]=  0
mem[        872]=  0
mem[        873]=  0
mem[        874]=  0
mem[        875]=  0
mem[        876]=  0
mem[        877]=  0
mem[        878]=  0
mem[        879]=  0
mem[        880]=  0
mem[        881]=  0
mem[        882]=  0
mem[        883]=  0
mem[        884]=  0
mem[        885]=  0
mem[        886]=  0
mem[        887]=  0
mem[        888]=  0
mem[        889]=  0
mem[        890]=  0
mem[        891]=  0
mem[        892]=  0
mem[        893]=  0
mem[        894]=  0
mem[        895]=  0
mem[        896]=  0
mem[        897]=  0
mem[        898]=  0
mem[        899]=  0
mem[        900]=  0
mem[        901]=  0
mem[        902]=  0
mem[        903]=  0
mem[        904]=  0
mem[        905]=  0
mem[        906]=  0
mem[        907]=  0
mem[        908]=  0
mem[        909]=  0
mem[        910]=  0
mem[        911]=  0
mem[        912]=  0
mem[        913]=  0
mem[        914]=  0
mem[        915]=  0
mem[        916]=  0
mem[        917]=  0
mem[        918]=  0
mem[        919]=  0
mem[        920]=  0
mem[        921]=  0
mem[        922]=  0
mem[        923]=  0
mem[        924]=  0
mem[        925]=  0
mem[        926]=  0
mem[        927]=  0
mem[        928]=  0
mem[        929]=  0
mem[        930]=  0
mem[        931]=  0
mem[        932]=  0
mem[        933]=  0
mem[        934]=  0
mem[        935]=  0
mem[        936]=  0
mem[        937]=  0
mem[        938]=  0
mem[        939]=  0
mem[        940]=  0
mem[        941]=  0
mem[        942]=  0
mem[        943]=  0
mem[        944]=  0
mem[        945]=  0
mem[        946]=  0
mem[        947]=  0
mem[        948]=  0
mem[        949]=  0
mem[        950]=  0
mem[        951]=  0
mem[        952]=  0
mem[        953]=  0
mem[        954]=  0
mem[        955]=  0
mem[        956]=  0
mem[        957]=  0
mem[        958]=  0
mem[        959]=  0
mem[        960]=  0
mem[        961]=  0
mem[        962]=  0
mem[        963]=  0
mem[        964]=  0
mem[        965]=  0
mem[        966]=  0
mem[        967]=  0
mem[        968]=  0
mem[        969]=  0
mem[        970]=  0
mem[        971]=  0
mem[        972]=  0
mem[        973]=  0
mem[        974]=  0
mem[        975]=  0
mem[        976]=  0
mem[        977]=  0
mem[        978]=  0
mem[        979]=  0
mem[        980]=  0
mem[        981]=  0
mem[        982]=  0
mem[        983]=  0
mem[        984]=  0
mem[        985]=  0
mem[        986]=  0
mem[        987]=  0
mem[        988]=  0
mem[        989]=  0
mem[        990]=  0
mem[        991]=  0
mem[        992]=  0
mem[        993]=  0
mem[        994]=  0
mem[        995]=  0
mem[        996]=  0
mem[        997]=  0
mem[        998]=  0
mem[        999]=  0
mem[       1000]=  0
mem[       1001]=  0
mem[       1002]=  0
mem[       1003]=  0
mem[       1004]=  0
mem[       1005]=  0
mem[       1006]=  0
mem[       1007]=  0
mem[       1008]=  0
mem[       1009]=  0
mem[       1010]=  0
mem[       1011]=  0
mem[       1012]=  0
mem[       1013]=  0
mem[       1014]=  0
mem[       1015]=  0
mem[       1016]=  0
mem[       1017]=  0
mem[       1018]=  0
mem[       1019]=  0
mem[       1020]=  0
mem[       1021]=  0
mem[       1022]=  0
mem[       1023]=  0
mem[          0]=  0
mem[          1]=  0
mem[          2]=  0
mem[          3]=  0
mem[          4]=  0
mem[          5]=  0
mem[          6]=  0
mem[          7]=  0
mem[          8]=  0
mem[          9]=  0
mem[         10]=  0
mem[         11]=  0
mem[         12]=  0
mem[         13]=  0
mem[         14]=  0
mem[         15]=  0
mem[         16]=  0
mem[         17]=  0
mem[         18]=  0
mem[         19]=  0
mem[         20]=  0
mem[         21]=  0
mem[         22]=  0
mem[         23]=  0
mem[         24]=  0
mem[         25]=  0
mem[         26]=  0
mem[         27]=  0
mem[         28]=  0
mem[         29]=  0
mem[         30]=  0
mem[         31]=  0
mem[         32]=  0
mem[         33]=  0
mem[         34]=  0
mem[         35]=  0
mem[         36]=  0
mem[         37]=  0
mem[         38]=  0
mem[         39]=  0
mem[         40]=  0
mem[         41]=  0
mem[         42]=  0
mem[         43]=  0
mem[         44]=  0
mem[         45]=  0
mem[         46]=  0
mem[         47]=  0
mem[         48]=  0
mem[         49]=  0
mem[         50]=  0
mem[         51]=  0
mem[         52]=  0
mem[         53]=  0
mem[         54]=  0
mem[         55]=  0
mem[         56]=  0
mem[         57]=  0
mem[         58]=  0
mem[         59]=  0
mem[         60]=  0
mem[         61]=  0
mem[         62]=  0
mem[         63]=  0
mem[         64]=  0
mem[         65]=  0
mem[         66]=  0
mem[         67]=  0
mem[         68]=  0
mem[         69]=  0
mem[         70]=  0
mem[         71]=  0
mem[         72]=  0
mem[         73]=  0
mem[         74]=  0
mem[         75]=  0
mem[         76]=  0
mem[         77]=  0
mem[         78]=  0
mem[         79]=  0
mem[         80]=  0
mem[         81]=  0
mem[         82]=  0
mem[         83]=  0
mem[         84]=  0
mem[         85]=  0
mem[         86]=  0
mem[         87]=  0
mem[         88]=  0
mem[         89]=  0
mem[         90]=  0
mem[         91]=  0
mem[         92]=  0
mem[         93]=  0
mem[         94]=  0
mem[         95]=  0
mem[         96]=  0
mem[         97]=  0
mem[         98]=  0
mem[         99]=  0
mem[        100]=  0
mem[        101]=  0
mem[        102]=  0
mem[        103]=  0
mem[        104]=  0
mem[        105]=  0
mem[        106]=  0
mem[        107]=  0
mem[        108]=  0
mem[        109]=  0
mem[        110]=  0
mem[        111]=  0
mem[        112]=  0
mem[        113]=  0
mem[        114]=  0
mem[        115]=  0
mem[        116]=  0
mem[        117]=  0
mem[        118]=  0
mem[        119]=  0
mem[        120]=  0
mem[        121]=  0
mem[        122]=  0
mem[        123]=  0
mem[        124]=  0
mem[        125]=  0
mem[        126]=  0
mem[        127]=  0
mem[        128]=  0
mem[        129]=  0
mem[        130]=  0
mem[        131]=  0
mem[        132]=  0
mem[        133]=  0
mem[        134]=  0
mem[        135]=  0
mem[        136]=  0
mem[        137]=  0
mem[        138]=  0
mem[        139]=  0
mem[        140]=  0
mem[        141]=  0
mem[        142]=  0
mem[        143]=  0
mem[        144]=  0
mem[        145]=  0
mem[        146]=  0
mem[        147]=  0
mem[        148]=  0
mem[        149]=  0
mem[        150]=  0
mem[        151]=  0
mem[        152]=  0
mem[        153]=  0
mem[        154]=  0
mem[        155]=  0
mem[        156]=  0
mem[        157]=  0
mem[        158]=  0
mem[        159]=  0
mem[        160]=  0
mem[        161]=  0
mem[        162]=  0
mem[        163]=  0
mem[        164]=  0
mem[        165]=  0
mem[        166]=  0
mem[        167]=  0
mem[        168]=  0
mem[        169]=  0
mem[        170]=  0
mem[        171]=  0
mem[        172]=  0
mem[        173]=  0
mem[        174]=  0
mem[        175]=  0
mem[        176]=  0
mem[        177]=  0
mem[        178]=  0
mem[        179]=  0
mem[        180]=  0
mem[        181]=  0
mem[        182]=  0
mem[        183]=  0
mem[        184]=  0
mem[        185]=  0
mem[        186]=  0
mem[        187]=  0
mem[        188]=  0
mem[        189]=  0
mem[        190]=  0
mem[        191]=  0
mem[        192]=  0
mem[        193]=  0
mem[        194]=  0
mem[        195]=  0
mem[        196]=  0
mem[        197]=  0
mem[        198]=  0
mem[        199]=  0
mem[        200]=  0
mem[        201]=  0
mem[        202]=  0
mem[        203]=  0
mem[        204]=  0
mem[        205]=  0
mem[        206]=  0
mem[        207]=  0
mem[        208]=  0
mem[        209]=  0
mem[        210]=  0
mem[        211]=  0
mem[        212]=  0
mem[        213]=  0
mem[        214]=  0
mem[        215]=  0
mem[        216]=  0
mem[        217]=  0
mem[        218]=  0
mem[        219]=  0
mem[        220]=  0
mem[        221]=  0
mem[        222]=  0
mem[        223]=  0
mem[        224]=  0
mem[        225]=  0
mem[        226]=  0
mem[        227]=  0
mem[        228]=  0
mem[        229]=  0
mem[        230]=  0
mem[        231]=  0
mem[        232]=  0
mem[        233]=  0
mem[        234]=  0
mem[        235]=  0
mem[        236]=  0
mem[        237]=  0
mem[        238]=  0
mem[        239]=  0
mem[        240]=  0
mem[        241]=  0
mem[        242]=  0
mem[        243]=  0
mem[        244]=  0
mem[        245]=  0
mem[        246]=  0
mem[        247]=  0
mem[        248]=  0
mem[        249]=  0
mem[        250]=  0
mem[        251]=  0
mem[        252]=  0
mem[        253]=  0
mem[        254]=  0
mem[        255]=  0
mem[        256]=  0
mem[        257]=  0
mem[        258]=  0
mem[        259]=  0
mem[        260]=  0
mem[        261]=  0
mem[        262]=  0
mem[        263]=  0
mem[        264]=  0
mem[        265]=  0
mem[        266]=  0
mem[        267]=  0
mem[        268]=  0
mem[        269]=  0
mem[        270]=  0
mem[        271]=  0
mem[        272]=  0
mem[        273]=  0
mem[        274]=  0
mem[        275]=  0
mem[        276]=  0
mem[        277]=  0
mem[        278]=  0
mem[        279]=  0
mem[        280]=  0
mem[        281]=  0
mem[        282]=  0
mem[        283]=  0
mem[        284]=  0
mem[        285]=  0
mem[        286]=  0
mem[        287]=  0
mem[        288]=  0
mem[        289]=  0
mem[        290]=  0
mem[        291]=  0
mem[        292]=  0
mem[        293]=  0
mem[        294]=  0
mem[        295]=  0
mem[        296]=  0
mem[        297]=  0
mem[        298]=  0
mem[        299]=  0
mem[        300]=  0
mem[        301]=  0
mem[        302]=  0
mem[        303]=  0
mem[        304]=  0
mem[        305]=  0
mem[        306]=  0
mem[        307]=  0
mem[        308]=  0
mem[        309]=  0
mem[        310]=  0
mem[        311]=  0
mem[        312]=  0
mem[        313]=  0
mem[        314]=  0
mem[        315]=  0
mem[        316]=  0
mem[        317]=  0
mem[        318]=  0
mem[        319]=  0
mem[        320]=  0
mem[        321]=  0
mem[        322]=  0
mem[        323]=  0
mem[        324]=  0
mem[        325]=  0
mem[        326]=  0
mem[        327]=  0
mem[        328]=  0
mem[        329]=  0
mem[        330]=  0
mem[        331]=  0
mem[        332]=  0
mem[        333]=  0
mem[        334]=  0
mem[        335]=  0
mem[        336]=  0
mem[        337]=  0
mem[        338]=  0
mem[        339]=  0
mem[        340]=  0
mem[        341]=  0
mem[        342]=  0
mem[        343]=  0
mem[        344]=  0
mem[        345]=  0
mem[        346]=  0
mem[        347]=  0
mem[        348]=  0
mem[        349]=  0
mem[        350]=  0
mem[        351]=  0
mem[        352]=  0
mem[        353]=  0
mem[        354]=  0
mem[        355]=  0
mem[        356]=  0
mem[        357]=  0
mem[        358]=  0
mem[        359]=  0
mem[        360]=  0
mem[        361]=  0
mem[        362]=  0
mem[        363]=  0
mem[        364]=  0
mem[        365]=  0
mem[        366]=  0
mem[        367]=  0
mem[        368]=  0
mem[        369]=  0
mem[        370]=  0
mem[        371]=  0
mem[        372]=  0
mem[        373]=  0
mem[        374]=  0
mem[        375]=  0
mem[        376]=  0
mem[        377]=  0
mem[        378]=  0
mem[        379]=  0
mem[        380]=  0
mem[        381]=  0
mem[        382]=  0
mem[        383]=  0
mem[        384]=  0
mem[        385]=  0
mem[        386]=  0
mem[        387]=  0
mem[        388]=  0
mem[        389]=  0
mem[        390]=  0
mem[        391]=  0
mem[        392]=  0
mem[        393]=  0
mem[        394]=  0
mem[        395]=  0
mem[        396]=  0
mem[        397]=  0
mem[        398]=  0
mem[        399]=  0
mem[        400]=  0
mem[        401]=  0
mem[        402]=  0
mem[        403]=  0
mem[        404]=  0
mem[        405]=  0
mem[        406]=  0
mem[        407]=  0
mem[        408]=  0
mem[        409]=  0
mem[        410]=  0
mem[        411]=  0
mem[        412]=  0
mem[        413]=  0
mem[        414]=  0
mem[        415]=  0
mem[        416]=  0
mem[        417]=  0
mem[        418]=  0
mem[        419]=  0
mem[        420]=  0
mem[        421]=  0
mem[        422]=  0
mem[        423]=  0
mem[        424]=  0
mem[        425]=  0
mem[        426]=  0
mem[        427]=  0
mem[        428]=  0
mem[        429]=  0
mem[        430]=  0
mem[        431]=  0
mem[        432]=  0
mem[        433]=  0
mem[        434]=  0
mem[        435]=  0
mem[        436]=  0
mem[        437]=  0
mem[        438]=  0
mem[        439]=  0
mem[        440]=  0
mem[        441]=  0
mem[        442]=  0
mem[        443]=  0
mem[        444]=  0
mem[        445]=  0
mem[        446]=  0
mem[        447]=  0
mem[        448]=  0
mem[        449]=  0
mem[        450]=  0
mem[        451]=  0
mem[        452]=  0
mem[        453]=  0
mem[        454]=  0
mem[        455]=  0
mem[        456]=  0
mem[        457]=  0
mem[        458]=  0
mem[        459]=  0
mem[        460]=  0
mem[        461]=  0
mem[        462]=  0
mem[        463]=  0
mem[        464]=  0
mem[        465]=  0
mem[        466]=  0
mem[        467]=  0
mem[        468]=  0
mem[        469]=  0
mem[        470]=  0
mem[        471]=  0
mem[        472]=  0
mem[        473]=  0
mem[        474]=  0
mem[        475]=  0
mem[        476]=  0
mem[        477]=  0
mem[        478]=  0
mem[        479]=  0
mem[        480]=  0
mem[        481]=  0
mem[        482]=  0
mem[        483]=  0
mem[        484]=  0
mem[        485]=  0
mem[        486]=  0
mem[        487]=  0
mem[        488]=  0
mem[        489]=  0
mem[        490]=  0
mem[        491]=  0
mem[        492]=  0
mem[        493]=  0
mem[        494]=  0
mem[        495]=  0
mem[        496]=  0
mem[        497]=  0
mem[        498]=  0
mem[        499]=  0
mem[        500]=  0
mem[        501]=  0
mem[        502]=  0
mem[        503]=  0
mem[        504]=  0
mem[        505]=  0
mem[        506]=  0
mem[        507]=  0
mem[        508]=  0
mem[        509]=  0
mem[        510]=  0
mem[        511]=  0
mem[        512]=  0
mem[        513]=  0
mem[        514]=  0
mem[        515]=  0
mem[        516]=  0
mem[        517]=  0
mem[        518]=  0
mem[        519]=  0
mem[        520]=  0
mem[        521]=  0
mem[        522]=  0
mem[        523]=  0
mem[        524]=  0
mem[        525]=  0
mem[        526]=  0
mem[        527]=  0
mem[        528]=  0
mem[        529]=  0
mem[        530]=  0
mem[        531]=  0
mem[        532]=  0
mem[        533]=  0
mem[        534]=  0
mem[        535]=  0
mem[        536]=  0
mem[        537]=  0
mem[        538]=  0
mem[        539]=  0
mem[        540]=  0
mem[        541]=  0
mem[        542]=  0
mem[        543]=  0
mem[        544]=  0
mem[        545]=  0
mem[        546]=  0
mem[        547]=  0
mem[        548]=  0
mem[        549]=  0
mem[        550]=  0
mem[        551]=  0
mem[        552]=  0
mem[        553]=  0
mem[        554]=  0
mem[        555]=  0
mem[        556]=  0
mem[        557]=  0
mem[        558]=  0
mem[        559]=  0
mem[        560]=  0
mem[        561]=  0
mem[        562]=  0
mem[        563]=  0
mem[        564]=  0
mem[        565]=  0
mem[        566]=  0
mem[        567]=  0
mem[        568]=  0
mem[        569]=  0
mem[        570]=  0
mem[        571]=  0
mem[        572]=  0
mem[        573]=  0
mem[        574]=  0
mem[        575]=  0
mem[        576]=  0
mem[        577]=  0
mem[        578]=  0
mem[        579]=  0
mem[        580]=  0
mem[        581]=  0
mem[        582]=  0
mem[        583]=  0
mem[        584]=  0
mem[        585]=  0
mem[        586]=  0
mem[        587]=  0
mem[        588]=  0
mem[        589]=  0
mem[        590]=  0
mem[        591]=  0
mem[        592]=  0
mem[        593]=  0
mem[        594]=  0
mem[        595]=  0
mem[        596]=  0
mem[        597]=  0
mem[        598]=  0
mem[        599]=  0
mem[        600]=  0
mem[        601]=  0
mem[        602]=  0
mem[        603]=  0
mem[        604]=  0
mem[        605]=  0
mem[        606]=  0
mem[        607]=  0
mem[        608]=  0
mem[        609]=  0
mem[        610]=  0
mem[        611]=  0
mem[        612]=  0
mem[        613]=  0
mem[        614]=  0
mem[        615]=  0
mem[        616]=  0
mem[        617]=  0
mem[        618]=  0
mem[        619]=  0
mem[        620]=  0
mem[        621]=  0
mem[        622]=  0
mem[        623]=  0
mem[        624]=  0
mem[        625]=  0
mem[        626]=  0
mem[        627]=  0
mem[        628]=  0
mem[        629]=  0
mem[        630]=  0
mem[        631]=  0
mem[        632]=  0
mem[        633]=  0
mem[        634]=  0
mem[        635]=  0
mem[        636]=  0
mem[        637]=  0
mem[        638]=  0
mem[        639]=  0
mem[        640]=  0
mem[        641]=  0
mem[        642]=  0
mem[        643]=  0
mem[        644]=  0
mem[        645]=  0
mem[        646]=  0
mem[        647]=  0
mem[        648]=  0
mem[        649]=  0
mem[        650]=  0
mem[        651]=  0
mem[        652]=  0
mem[        653]=  0
mem[        654]=  0
mem[        655]=  0
mem[        656]=  0
mem[        657]=  0
mem[        658]=  0
mem[        659]=  0
mem[        660]=  0
mem[        661]=  0
mem[        662]=  0
mem[        663]=  0
mem[        664]=  0
mem[        665]=  0
mem[        666]=  0
mem[        667]=  0
mem[        668]=  0
mem[        669]=  0
mem[        670]=  0
mem[        671]=  0
mem[        672]=  0
mem[        673]=  0
mem[        674]=  0
mem[        675]=  0
mem[        676]=  0
mem[        677]=  0
mem[        678]=  0
mem[        679]=  0
mem[        680]=  0
mem[        681]=  0
mem[        682]=  0
mem[        683]=  0
mem[        684]=  0
mem[        685]=  0
mem[        686]=  0
mem[        687]=  0
mem[        688]=  0
mem[        689]=  0
mem[        690]=  0
mem[        691]=  0
mem[        692]=  0
mem[        693]=  0
mem[        694]=  0
mem[        695]=  0
mem[        696]=  0
mem[        697]=  0
mem[        698]=  0
mem[        699]=  0
mem[        700]=  0
mem[        701]=  0
mem[        702]=  0
mem[        703]=  0
mem[        704]=  0
mem[        705]=  0
mem[        706]=  0
mem[        707]=  0
mem[        708]=  0
mem[        709]=  0
mem[        710]=  0
mem[        711]=  0
mem[        712]=  0
mem[        713]=  0
mem[        714]=  0
mem[        715]=  0
mem[        716]=  0
mem[        717]=  0
mem[        718]=  0
mem[        719]=  0
mem[        720]=  0
mem[        721]=  0
mem[        722]=  0
mem[        723]=  0
mem[        724]=  0
mem[        725]=  0
mem[        726]=  0
mem[        727]=  0
mem[        728]=  0
mem[        729]=  0
mem[        730]=  0
mem[        731]=  0
mem[        732]=  0
mem[        733]=  0
mem[        734]=  0
mem[        735]=  0
mem[        736]=  0
mem[        737]=  0
mem[        738]=  0
mem[        739]=  0
mem[        740]=  0
mem[        741]=  0
mem[        742]=  0
mem[        743]=  0
mem[        744]=  0
mem[        745]=  0
mem[        746]=  0
mem[        747]=  0
mem[        748]=  0
mem[        749]=  0
mem[        750]=  0
mem[        751]=  0
mem[        752]=  0
mem[        753]=  0
mem[        754]=  0
mem[        755]=  0
mem[        756]=  0
mem[        757]=  0
mem[        758]=  0
mem[        759]=  0
mem[        760]=  0
mem[        761]=  0
mem[        762]=  0
mem[        763]=  0
mem[        764]=  0
mem[        765]=  0
mem[        766]=  0
mem[        767]=  0
mem[        768]=  0
mem[        769]=  0
mem[        770]=  0
mem[        771]=  0
mem[        772]=  0
mem[        773]=  0
mem[        774]=  0
mem[        775]=  0
mem[        776]=  0
mem[        777]=  0
mem[        778]=  0
mem[        779]=  0
mem[        780]=  0
mem[        781]=  0
mem[        782]=  0
mem[        783]=  0
mem[        784]=  0
mem[        785]=  0
mem[        786]=  0
mem[        787]=  0
mem[        788]=  0
mem[        789]=  0
mem[        790]=  0
mem[        791]=  0
mem[        792]=  0
mem[        793]=  0
mem[        794]=  0
mem[        795]=  0
mem[        796]=  0
mem[        797]=  0
mem[        798]=  0
mem[        799]=  0
mem[        800]=  0
mem[        801]=  0
mem[        802]=  0
mem[        803]=  0
mem[        804]=  0
mem[        805]=  0
mem[        806]=  0
mem[        807]=  0
mem[        808]=  0
mem[        809]=  0
mem[        810]=  0
mem[        811]=  0
mem[        812]=  0
mem[        813]=  0
mem[        814]=  0
mem[        815]=  0
mem[        816]=  0
mem[        817]=  0
mem[        818]=  0
mem[        819]=  0
mem[        820]=  0
mem[        821]=  0
mem[        822]=  0
mem[        823]=  0
mem[        824]=  0
mem[        825]=  0
mem[        826]=  0
mem[        827]=  0
mem[        828]=  0
mem[        829]=  0
mem[        830]=  0
mem[        831]=  0
mem[        832]=  0
mem[        833]=  0
mem[        834]=  0
mem[        835]=  0
mem[        836]=  0
mem[        837]=  0
mem[        838]=  0
mem[        839]=  0
mem[        840]=  0
mem[        841]=  0
mem[        842]=  0
mem[        843]=  0
mem[        844]=  0
mem[        845]=  0
mem[        846]=  0
mem[        847]=  0
mem[        848]=  0
mem[        849]=  0
mem[        850]=  0
mem[        851]=  0
mem[        852]=  0
mem[        853]=  0
mem[        854]=  0
mem[        855]=  0
mem[        856]=  0
mem[        857]=  0
mem[        858]=  0
mem[        859]=  0
mem[        860]=  0
mem[        861]=  0
mem[        862]=  0
mem[        863]=  0
mem[        864]=  0
mem[        865]=  0
mem[        866]=  0
mem[        867]=  0
mem[        868]=  0
mem[        869]=  0
mem[        870]=  0
mem[        871]=  0
mem[        872]=  0
mem[        873]=  0
mem[        874]=  0
mem[        875]=  0
mem[        876]=  0
mem[        877]=  0
mem[        878]=  0
mem[        879]=  0
mem[        880]=  0
mem[        881]=  0
mem[        882]=  0
mem[        883]=  0
mem[        884]=  0
mem[        885]=  0
mem[        886]=  0
mem[        887]=  0
mem[        888]=  0
mem[        889]=  0
mem[        890]=  0
mem[        891]=  0
mem[        892]=  0
mem[        893]=  0
mem[        894]=  0
mem[        895]=  0
mem[        896]=  0
mem[        897]=  0
mem[        898]=  0
mem[        899]=  0
mem[        900]=  0
mem[        901]=  0
mem[        902]=  0
mem[        903]=  0
mem[        904]=  0
mem[        905]=  0
mem[        906]=  0
mem[        907]=  0
mem[        908]=  0
mem[        909]=  0
mem[        910]=  0
mem[        911]=  0
mem[        912]=  0
mem[        913]=  0
mem[        914]=  0
mem[        915]=  0
mem[        916]=  0
mem[        917]=  0
mem[        918]=  0
mem[        919]=  0
mem[        920]=  0
mem[        921]=  0
mem[        922]=  0
mem[        923]=  0
mem[        924]=  0
mem[        925]=  0
mem[        926]=  0
mem[        927]=  0
mem[        928]=  0
mem[        929]=  0
mem[        930]=  0
mem[        931]=  0
mem[        932]=  0
mem[        933]=  0
mem[        934]=  0
mem[        935]=  0
mem[        936]=  0
mem[        937]=  0
mem[        938]=  0
mem[        939]=  0
mem[        940]=  0
mem[        941]=  0
mem[        942]=  0
mem[        943]=  0
mem[        944]=  0
mem[        945]=  0
mem[        946]=  0
mem[        947]=  0
mem[        948]=  0
mem[        949]=  0
mem[        950]=  0
mem[        951]=  0
mem[        952]=  0
mem[        953]=  0
mem[        954]=  0
mem[        955]=  0
mem[        956]=  0
mem[        957]=  0
mem[        958]=  0
mem[        959]=  0
mem[        960]=  0
mem[        961]=  0
mem[        962]=  0
mem[        963]=  0
mem[        964]=  0
mem[        965]=  0
mem[        966]=  0
mem[        967]=  0
mem[        968]=  0
mem[        969]=  0
mem[        970]=  0
mem[        971]=  0
mem[        972]=  0
mem[        973]=  0
mem[        974]=  0
mem[        975]=  0
mem[        976]=  0
mem[        977]=  0
mem[        978]=  0
mem[        979]=  0
mem[        980]=  0
mem[        981]=  0
mem[        982]=  0
mem[        983]=  0
mem[        984]=  0
mem[        985]=  0
mem[        986]=  0
mem[        987]=  0
mem[        988]=  0
mem[        989]=  0
mem[        990]=  0
mem[        991]=  0
mem[        992]=  0
mem[        993]=  0
mem[        994]=  0
mem[        995]=  0
mem[        996]=  0
mem[        997]=  0
mem[        998]=  0
mem[        999]=  0
mem[       1000]=  0
mem[       1001]=  0
mem[       1002]=  0
mem[       1003]=  0
mem[       1004]=  0
mem[       1005]=  0
mem[       1006]=  0
mem[       1007]=  0
mem[       1008]=  0
mem[       1009]=  0
mem[       1010]=  0
mem[       1011]=  0
mem[       1012]=  0
mem[       1013]=  0
mem[       1014]=  0
mem[       1015]=  0
mem[       1016]=  0
mem[       1017]=  0
mem[       1018]=  0
mem[       1019]=  0
mem[       1020]=  0
mem[       1021]=  0
mem[       1022]=  0
mem[       1023]=  0
VCD info: dumpfile zap.vcd opened for output.
Started!
                   0PC_nxt before =          x
Normal PC update!
                   0PC_nxt after =          x
PC_nxt =          x
                   0PC_nxt before =          x
Normal PC update!
                   0PC_nxt after =          x
PC_nxt =          x
                  10Register file in reset...
                  10PC_nxt before =          0
Normal PC update!
                  10PC_nxt after =          4
PC_nxt =          4
                  10zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  10Received index as          0 and rd_port 0
                  10Register read on rd_port 0
                  10Reg read -> Returned value xxxxxxxx
                  10zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  10Received index as          0 and rd_port 1
                  10Register read on rd_port 1
                  10Reg read -> Returned value xxxxxxxx
                  10Received index as          0 and rd_port 2
                  10Register read on rd_port 2
                  10Reg read -> Returned value xxxxxxxx
                  10Received index as         16 and rd_port 3
                  10Register read on rd_port 3
                  10Reg read -> Returned value xxxxxxxx
                  10==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                  10zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                  10zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                  10PC_nxt before =          0
Normal PC update!
                  10PC_nxt after =          4
PC_nxt =          4
                  10zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  10Received index as          0 and rd_port 0
                  10Register read on rd_port 0
                  10Reg read -> Returned value 00000000
                  10zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  10Received index as          0 and rd_port 1
                  10Register read on rd_port 1
                  10Reg read -> Returned value 00000000
                  10Received index as          0 and rd_port 2
                  10Register read on rd_port 2
                  10Reg read -> Returned value 00000000
                  10Received index as         16 and rd_port 3
                  10Register read on rd_port 3
                  10Reg read -> Returned value 00000000
                  10PC_nxt before =          0
Normal PC update!
                  10PC_nxt after =          4
PC_nxt =          4
                  10PC next =          4 PC current =          0
                  30zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  30Received index as          0 and rd_port 0
                  30Register read on rd_port 0
                  30Reg read -> Returned value 00000000
                  30zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  30Received index as          0 and rd_port 1
                  30Register read on rd_port 1
                  30Reg read -> Returned value 00000000
                  30Received index as          0 and rd_port 2
                  30Register read on rd_port 2
                  30Reg read -> Returned value 00000000
                  30Received index as          0 and rd_port 3
                  30Register read on rd_port 3
                  30Reg read -> Returned value 00000000
                  30zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  30zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =          0 index from this stage =  0 result from alu =          0
                  30zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  30zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                  30zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                  30PC_nxt before =          4
Normal PC update!
                  30PC_nxt after =          8
PC_nxt =          8
                  30zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_immediate Process immediate...
                  30PC next =          8 PC current =          4
                  50zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  50zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                  50zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  50zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                  50zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                  50zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  50Received index as          0 and rd_port 0
                  50Register read on rd_port 0
                  50Reg read -> Returned value 00000000
                  50zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  50Received index as 4294967297 and rd_port 1
                  50Constant detect. Returning 00000001
                  50Received index as 4294967296 and rd_port 2
                  50Constant detect. Returning 00000000
                  50Received index as          0 and rd_port 3
                  50Register read on rd_port 3
                  50Reg read -> Returned value 00000000
                  50PC_nxt before =          8
Normal PC update!
                  50PC_nxt after =         12
PC_nxt =         12
                  50zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_immediate Process immediate...
                  50PC next =         12 PC current =          8
                  70PC_nxt before =         12
Normal PC update!
                  70PC_nxt after =         16
PC_nxt =         16
                  70zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_immediate Process immediate...
                  70PC next =         16 PC current =         12
                  90PC_nxt before =         16
Normal PC update!
                  90PC_nxt after =         20
PC_nxt =         20
                  90zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  90Received index as          0 and rd_port 0
                  90Register read on rd_port 0
                  90Reg read -> Returned value 00000000
                  90zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  90Received index as 4294967298 and rd_port 1
                  90Constant detect. Returning 00000002
                  90Received index as 4294967296 and rd_port 2
                  90Constant detect. Returning 00000000
                  90Received index as          0 and rd_port 3
                  90Register read on rd_port 3
                  90Reg read -> Returned value 00000000
                  90zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  90Received index as          0 and rd_port 0
                  90Matched shifter destination index 000000000 ... given as 00000000
                  90zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  90Received index as 4294967298 and rd_port 1
                  90Constant detect. Returning 00000002
                  90Received index as 4294967296 and rd_port 2
                  90Constant detect. Returning 00000000
                  90Received index as          0 and rd_port 3
                  90Matched shifter destination index 000000000 ... given as 00000000
                  90==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          1
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                  90zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          1
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                  90zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                  90zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                  90Received index as          0 and rd_port 0
                  90Matched shifter destination index 000000000 ... given as 00000001
                  90zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                  90Received index as 4294967298 and rd_port 1
                  90Constant detect. Returning 00000002
                  90Received index as 4294967296 and rd_port 2
                  90Constant detect. Returning 00000000
                  90Received index as          0 and rd_port 3
                  90Matched shifter destination index 000000000 ... given as 00000001
                  90zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_immediate Process immediate...
                  90PC next =         20 PC current =         16
                 110zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 110Received index as          0 and rd_port 0
                 110Matched ALU destination index 00 ... given as 00000001
                 110zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 110Received index as 4294967299 and rd_port 1
                 110Constant detect. Returning 00000003
                 110Received index as 4294967296 and rd_port 2
                 110Constant detect. Returning 00000000
                 110Received index as          0 and rd_port 3
                 110Matched ALU destination index 00 ... given as 00000001
                 110==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  1 result from alu =          1
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 110zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  1 result from alu =          1
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 110PC_nxt before =         20
Normal PC update!
                 110PC_nxt after =         24
PC_nxt =         24
                 110==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  1 result from alu =          2
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 110zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  1 result from alu =          2
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 110zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 110Received index as          0 and rd_port 0
                 110Matched ALU destination index 00 ... given as 00000001
                 110zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 110Received index as 4294967299 and rd_port 1
                 110Constant detect. Returning 00000003
                 110Received index as 4294967296 and rd_port 2
                 110Constant detect. Returning 00000000
                 110Received index as          0 and rd_port 3
                 110Matched ALU destination index 00 ... given as 00000001
                 110zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 110PC_nxt before =         20
Stall from decode!
                 110PC_nxt after =         20
PC_nxt =         20
                 110PC next =         20 PC current =         20
                 130PC_nxt before =         20
Stall from decode!
                 130PC_nxt after =         20
PC_nxt =         20
                 130zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 130Received index as          0 and rd_port 0
                 130Matched memory destination index 00 ... given as 00000001
                 130zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 130Received index as          0 and rd_port 1
                 130Matched memory destination index 00 ... given as 00000001
                 130Received index as 4294967296 and rd_port 2
                 130Constant detect. Returning 00000000
                 130Received index as          0 and rd_port 3
                 130Matched memory destination index 00 ... given as 00000001
                 130==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  2 result from alu =          2
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 130zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  2 result from alu =          2
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 130==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  2 result from alu =          3
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 130zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  2 result from alu =          3
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 130zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 130Received index as          0 and rd_port 0
                 130Matched memory destination index 00 ... given as 00000001
                 130zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 130Received index as          0 and rd_port 1
                 130Matched memory destination index 00 ... given as 00000001
                 130Received index as 4294967296 and rd_port 2
                 130Constant detect. Returning 00000000
                 130Received index as          0 and rd_port 3
                 130Matched memory destination index 00 ... given as 00000001
                 130zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_ls: LS decode...
                 130PC next =         20 PC current =         20
                 150zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 150Received index as         35 and rd_port 0
                 150Register read on rd_port 0
                 150Reg read -> Returned value 00000000
                 150zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 150Received index as 4294967300 and rd_port 1
                 150Constant detect. Returning 00000004
                 150Received index as 4294967296 and rd_port 2
                 150Constant detect. Returning 00000000
                 150Received index as          1 and rd_port 3
                 150Matched memory destination index 01 ... given as 00000002
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          3
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          3
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          3
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150PC_nxt before =         20
Stall from decode!
                 150PC_nxt after =         20
PC_nxt =         20
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          3
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 150Received index as         35 and rd_port 0
                 150Register read on rd_port 0
                 150Reg read -> Returned value 00000000
                 150zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 150Received index as 4294967300 and rd_port 1
                 150Constant detect. Returning 00000004
                 150Received index as 4294967296 and rd_port 2
                 150Constant detect. Returning 00000000
                 150Received index as          1 and rd_port 3
                 150Matched memory destination index 01 ... given as 00000002
                 150zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_ls: LS decode...
                 150==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          4
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          4
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  3 result from alu =          4
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 150PC next =         20 PC current =         20
                 170PC_nxt before =         20
Stall from decode!
                 170PC_nxt after =         20
PC_nxt =         20
                 170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 170Received index as         35 and rd_port 0
                 170Matched shifter destination index 000000023 ... given as 00000004
                 170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 170Received index as 4294967300 and rd_port 1
                 170Constant detect. Returning 00000004
                 170Received index as 4294967296 and rd_port 2
                 170Constant detect. Returning 00000000
                 170Received index as          2 and rd_port 3
                 170Matched memory destination index 02 ... given as 00000003
                 170==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          0 index from this stage = 35 result from alu =          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 170zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          1 value from issue =          2 index from this stage = 35 result from alu =          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          2
                 170==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          0 index from this stage = 35 result from alu =          3
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          3
                 170zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          3
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          1 value from issue =          2 index from this stage = 35 result from alu =          3
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          2
                 170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 170Received index as         35 and rd_port 0
                 170Matched shifter destination index 000000023 ... given as 00000003
                 170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 170Received index as 4294967300 and rd_port 1
                 170Constant detect. Returning 00000004
                 170Received index as 4294967296 and rd_port 2
                 170Constant detect. Returning 00000000
                 170Received index as          2 and rd_port 3
                 170Matched memory destination index 02 ... given as 00000003
                 170==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          0 index from this stage = 35 result from alu =          1
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 170zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          1
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          1 value from issue =          2 index from this stage = 35 result from alu =          1
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          2
                 170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 170Received index as         35 and rd_port 0
                 170Matched shifter destination index 000000023 ... given as 00000001
                 170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 170Received index as 4294967300 and rd_port 1
                 170Constant detect. Returning 00000004
                 170Received index as 4294967296 and rd_port 2
                 170Constant detect. Returning 00000000
                 170Received index as          2 and rd_port 3
                 170Matched memory destination index 02 ... given as 00000003
                 170zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_ls: LS decode...
                 170PC next =         20 PC current =         20
                 190zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 190Received index as         35 and rd_port 0
                 190Matched shifter destination index 000000023 ... given as 00000001
                 190zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 190Received index as 4294967300 and rd_port 1
                 190Constant detect. Returning 00000004
                 190Received index as 4294967296 and rd_port 2
                 190Constant detect. Returning 00000000
                 190Received index as          3 and rd_port 3
                 190Matched memory destination index 03 ... given as 00000004
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          2 value from issue =          3 index from this stage = 35 result from alu =          1
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          3
                 190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          1 index from this stage = 35 result from alu =          1
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 190PC_nxt before =         20
Stall from decode!
                 190PC_nxt after =         20
PC_nxt =         20
                 190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          1 index from this stage = 35 result from alu =          2
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          2
                 190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          2
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          2 value from issue =          3 index from this stage = 35 result from alu =          2
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          3
                 190zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 190Received index as         35 and rd_port 0
                 190Matched shifter destination index 000000023 ... given as 00000002
                 190zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 190Received index as 4294967300 and rd_port 1
                 190Constant detect. Returning 00000004
                 190Received index as 4294967296 and rd_port 2
                 190Constant detect. Returning 00000000
                 190Received index as          3 and rd_port 3
                 190Matched memory destination index 03 ... given as 00000004
                 190zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 190PC_nxt before =         20
Normal PC update!
                 190PC_nxt after =         24
PC_nxt =         24
                 190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          1 index from this stage = 35 result from alu =          5
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          5
                 190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          5
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          2 value from issue =          3 index from this stage = 35 result from alu =          5
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          3
                 190zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 190Received index as         35 and rd_port 0
                 190Matched shifter destination index 000000023 ... given as 00000005
                 190zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 190Received index as 4294967300 and rd_port 1
                 190Constant detect. Returning 00000004
                 190Received index as 4294967296 and rd_port 2
                 190Constant detect. Returning 00000000
                 190Received index as          3 and rd_port 3
                 190Matched memory destination index 03 ... given as 00000004
                 190PC next =         24 PC current =         20
                 210PC_nxt before =         24
Normal PC update!
                 210PC_nxt after =         28
PC_nxt =         28
                 210zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 210Received index as          0 and rd_port 0
                 210Register read on rd_port 0
                 210Reg read -> Returned value 00000000
                 210zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 210Received index as         35 and rd_port 1
                 210Matched shifter destination index 000000023 ... given as 00000005
                 210Received index as 4294967296 and rd_port 2
                 210Constant detect. Returning 00000000
                 210Received index as          0 and rd_port 3
                 210Register read on rd_port 3
                 210Reg read -> Returned value 00000000
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          3 value from issue =          4 index from this stage = 35 result from alu =          5
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 210==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          5 index from this stage = 35 result from alu =          5
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          5
                 210zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 210zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 210Received index as          0 and rd_port 0
                 210Register read on rd_port 0
                 210Reg read -> Returned value 00000001
                 210zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 210Received index as         35 and rd_port 1
                 210Matched shifter destination index 000000023 ... given as 00000009
                 210Received index as 4294967296 and rd_port 2
                 210Constant detect. Returning 00000000
                 210Received index as          0 and rd_port 3
                 210Register read on rd_port 3
                 210Reg read -> Returned value 00000001
                 210==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          5 index from this stage = 35 result from alu =          9
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          9
                 210zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue = 4294967300 value from issue =          4 index from this stage = 35 result from alu =          9
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => It is an immediate value.
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          3 value from issue =          4 index from this stage = 35 result from alu =          9
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 210zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 210PC_nxt before =         24
Stall from decode!
                 210PC_nxt after =         24
PC_nxt =         24
                 210PC_nxt before =         24
Normal PC update!
                 210PC_nxt after =         28
PC_nxt =         28
                 210zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 210PC next =         28 PC current =         24
                 230zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 230Received index as         15 and rd_port 0
                 230PC requested... given as 0000001c
                 230zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 230Received index as 8589934590 and rd_port 1
                 230Constant detect. Returning fffffffe
                 230Received index as 4294967298 and rd_port 2
                 230Constant detect. Returning 00000002
                 230Received index as          0 and rd_port 3
                 230Register read on rd_port 3
                 230Reg read -> Returned value 00000001
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          9 index from this stage = 35 result from alu =          9
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          9
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage = 35 result from alu =          9
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 230==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage = 35 result from alu =          9
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 230zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 230PC_nxt before =         28
Normal PC update!
                 230PC_nxt after =         32
PC_nxt =         32
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          9 index from this stage = 35 result from alu =          9
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          9
                 230zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 230Received index as         15 and rd_port 0
                 230PC requested... given as 0000001c
                 230zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 230Received index as 8589934590 and rd_port 1
                 230Constant detect. Returning fffffffe
                 230Received index as 4294967298 and rd_port 2
                 230Constant detect. Returning 00000002
                 230Received index as          0 and rd_port 3
                 230Register read on rd_port 3
                 230Reg read -> Returned value 00000001
                 230==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage = 35 result from alu =         13
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 230zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         35 value from issue =          9 index from this stage = 35 result from alu =         13
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage = 35 result from alu =         13
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          1
                 230zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 230PC next =         32 PC current =         28
                 250PC_nxt before =         32
Normal PC update!
                 250PC_nxt after =         36
PC_nxt =         36
                 250zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 250Received index as          0 and rd_port 0
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 250Received index as          0 and rd_port 1
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250Received index as 4294967296 and rd_port 2
                 250Constant detect. Returning 00000000
                 250Received index as          0 and rd_port 3
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =         13
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 250zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  0 result from alu =         13
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 250==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          4
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 250zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  0 result from alu =          4
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          4
                 250zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 250Received index as          0 and rd_port 0
                 250Matched shifter destination index 000000000 ... given as 00000004
                 250zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 250Received index as          0 and rd_port 1
                 250Matched shifter destination index 000000000 ... given as 00000004
                 250Received index as 4294967296 and rd_port 2
                 250Constant detect. Returning 00000000
                 250Received index as          0 and rd_port 3
                 250Matched shifter destination index 000000000 ... given as 00000004
                 250==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =         13
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 250zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          1 index from this stage =  0 result from alu =         13
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 250zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 250Received index as          0 and rd_port 0
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 250Received index as          0 and rd_port 1
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250Received index as 4294967296 and rd_port 2
                 250Constant detect. Returning 00000000
                 250Received index as          0 and rd_port 3
                 250Matched shifter destination index 000000000 ... given as 0000000d
                 250PC next =         36 PC current =         32
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         13
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         13
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         13
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 270Received index as          0 and rd_port 0
                 270Matched ALU destination index 00 ... given as 0000000d
                 270zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 270Received index as          0 and rd_port 1
                 270Matched ALU destination index 00 ... given as 0000000d
                 270Received index as 4294967296 and rd_port 2
                 270Constant detect. Returning 00000000
                 270Received index as          0 and rd_port 3
                 270Matched ALU destination index 00 ... given as 0000000d
                 270ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 270PC_nxt before =         36
Clear from ALU!
                 270PC_nxt after =         14
PC_nxt =         14
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         14
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         14
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         14
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 270Received index as          0 and rd_port 0
                 270Matched ALU destination index 00 ... given as 0000000d
                 270zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 270Received index as          0 and rd_port 1
                 270Matched ALU destination index 00 ... given as 0000000d
                 270Received index as 4294967296 and rd_port 2
                 270Constant detect. Returning 00000000
                 270Received index as          0 and rd_port 3
                 270Matched ALU destination index 00 ... given as 0000000d
                 270ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270PC_nxt before =         36
Clear from ALU!
                 270PC_nxt after =         20
PC_nxt =         20
                 270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 270zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 270Received index as          0 and rd_port 0
                 270Matched ALU destination index 00 ... given as 0000000d
                 270zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 270Received index as          0 and rd_port 1
                 270Matched ALU destination index 00 ... given as 0000000d
                 270Received index as 4294967296 and rd_port 2
                 270Constant detect. Returning 00000000
                 270Received index as          0 and rd_port 3
                 270Matched ALU destination index 00 ... given as 0000000d
                 270PC next =         20 PC current =         36
                 290PC_nxt before =         20
Clear from ALU!
                 290PC_nxt after =         20
PC_nxt =         20
                 290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 290Received index as          0 and rd_port 0
                 290Matched shifter destination index 000000000 ... given as 00000014
                 290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 290Received index as          0 and rd_port 1
                 290Matched shifter destination index 000000000 ... given as 00000014
                 290Received index as          0 and rd_port 2
                 290Matched shifter destination index 000000000 ... given as 00000014
                 290Received index as         16 and rd_port 3
                 290Matched ALU destination index 10 ... given as 00000014
                 290==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 290zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 290PC_nxt before =         20
Normal PC update!
                 290PC_nxt after =         24
PC_nxt =         24
                 290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 290Received index as          0 and rd_port 0
                 290Matched memory destination index 00 ... given as 0000000d
                 290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 290Received index as          0 and rd_port 1
                 290Matched memory destination index 00 ... given as 0000000d
                 290Received index as          0 and rd_port 2
                 290Matched memory destination index 00 ... given as 0000000d
                 290Received index as         16 and rd_port 3
                 290Matched ALU destination index 10 ... given as 00000014
                 290==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 290zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 290Received index as          0 and rd_port 0
                 290Matched memory destination index 00 ... given as 0000000d
                 290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 290Received index as          0 and rd_port 1
                 290Matched memory destination index 00 ... given as 0000000d
                 290Received index as          0 and rd_port 2
                 290Matched memory destination index 00 ... given as 0000000d
                 290Received index as         16 and rd_port 3
                 290Matched ALU destination index 10 ... given as 00000014
                 290PC next =         24 PC current =         20
                 310zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 310Received index as          0 and rd_port 0
                 310Register read on rd_port 0
                 310Reg read -> Returned value 00000001
                 310zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 310Received index as          0 and rd_port 1
                 310Register read on rd_port 1
                 310Reg read -> Returned value 00000001
                 310Received index as          0 and rd_port 2
                 310Register read on rd_port 2
                 310Reg read -> Returned value 00000001
                 310Received index as          0 and rd_port 3
                 310Register read on rd_port 3
                 310Reg read -> Returned value 00000000
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 310==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 310zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 310PC_nxt before =         24
Normal PC update!
                 310PC_nxt after =         28
PC_nxt =         28
                 310zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 310Received index as          0 and rd_port 0
                 310Register read on rd_port 0
                 310Reg read -> Returned value 0000000d
                 310zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 310Received index as          0 and rd_port 1
                 310Register read on rd_port 1
                 310Reg read -> Returned value 0000000d
                 310Received index as          0 and rd_port 2
                 310Register read on rd_port 2
                 310Reg read -> Returned value 0000000d
                 310Received index as          0 and rd_port 3
                 310Register read on rd_port 3
                 310Reg read -> Returned value 0000000d
                 310zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 310PC next =         28 PC current =         24
                 330PC_nxt before =         28
Normal PC update!
                 330PC_nxt after =         32
PC_nxt =         32
                 330zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 330Received index as         15 and rd_port 0
                 330PC requested... given as 0000001c
                 330zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 330Received index as 8589934590 and rd_port 1
                 330Constant detect. Returning fffffffe
                 330Received index as 4294967298 and rd_port 2
                 330Constant detect. Returning 00000002
                 330Received index as          0 and rd_port 3
                 330Register read on rd_port 3
                 330Reg read -> Returned value 0000000d
                 330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 330zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 330Received index as         15 and rd_port 0
                 330PC requested... given as 0000001c
                 330zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 330Received index as 8589934590 and rd_port 1
                 330Constant detect. Returning fffffffe
                 330Received index as 4294967298 and rd_port 2
                 330Constant detect. Returning 00000002
                 330Received index as          0 and rd_port 3
                 330Register read on rd_port 3
                 330Reg read -> Returned value 0000000d
                 330zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 330PC next =         32 PC current =         28
                 350zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 350Received index as          0 and rd_port 0
                 350Register read on rd_port 0
                 350Reg read -> Returned value 0000001c
                 350zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 350Received index as          0 and rd_port 1
                 350Register read on rd_port 1
                 350Reg read -> Returned value xxxxxxxx
                 350Received index as 4294967296 and rd_port 2
                 350Constant detect. Returning 00000000
                 350Received index as          0 and rd_port 3
                 350Register read on rd_port 3
                 350Reg read -> Returned value 0000000d
                 350==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 350zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 350PC_nxt before =         32
Normal PC update!
                 350PC_nxt after =         36
PC_nxt =         36
                 350zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 350Received index as          0 and rd_port 0
                 350Register read on rd_port 0
                 350Reg read -> Returned value 0000000d
                 350zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 350Received index as          0 and rd_port 1
                 350Register read on rd_port 1
                 350Reg read -> Returned value 0000000d
                 350Received index as 4294967296 and rd_port 2
                 350Constant detect. Returning 00000000
                 350Received index as          0 and rd_port 3
                 350Register read on rd_port 3
                 350Reg read -> Returned value 0000000d
                 350PC next =         36 PC current =         32
                 370PC_nxt before =         36
Normal PC update!
                 370PC_nxt after =         40
PC_nxt =         40
                 370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 370Received index as          0 and rd_port 0
                 370Register read on rd_port 0
                 370Reg read -> Returned value 0000000d
                 370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 370Received index as          0 and rd_port 1
                 370Register read on rd_port 1
                 370Reg read -> Returned value 0000000d
                 370Received index as 4294967296 and rd_port 2
                 370Constant detect. Returning 00000000
                 370Received index as          0 and rd_port 3
                 370Register read on rd_port 3
                 370Reg read -> Returned value 0000000d
                 370ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 370==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 370Received index as          0 and rd_port 0
                 370Register read on rd_port 0
                 370Reg read -> Returned value 0000000d
                 370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 370Received index as          0 and rd_port 1
                 370Register read on rd_port 1
                 370Reg read -> Returned value 0000000d
                 370Received index as 4294967296 and rd_port 2
                 370Constant detect. Returning 00000000
                 370Received index as          0 and rd_port 3
                 370Register read on rd_port 3
                 370Reg read -> Returned value 0000000d
                 370PC_nxt before =         36
Clear from ALU!
                 370PC_nxt after =     106496
PC_nxt =     106496
                 370ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370PC_nxt before =         36
Clear from ALU!
                 370PC_nxt after =         20
PC_nxt =         20
                 370==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 370Received index as          0 and rd_port 0
                 370Register read on rd_port 0
                 370Reg read -> Returned value 0000000d
                 370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 370Received index as          0 and rd_port 1
                 370Register read on rd_port 1
                 370Reg read -> Returned value 0000000d
                 370Received index as 4294967296 and rd_port 2
                 370Constant detect. Returning 00000000
                 370Received index as          0 and rd_port 3
                 370Register read on rd_port 3
                 370Reg read -> Returned value 0000000d
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 370PC next =         20 PC current =         36
                 390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 390zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 390Received index as          0 and rd_port 0
                 390Register read on rd_port 0
                 390Reg read -> Returned value 0000000d
                 390zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 390Received index as          0 and rd_port 1
                 390Register read on rd_port 1
                 390Reg read -> Returned value 0000000d
                 390Received index as          0 and rd_port 2
                 390Register read on rd_port 2
                 390Reg read -> Returned value 0000000d
                 390Received index as         16 and rd_port 3
                 390Matched ALU destination index 10 ... given as 00000014
                 390PC_nxt before =         20
Normal PC update!
                 390PC_nxt after =         24
PC_nxt =         24
                 390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 390zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 390Received index as          0 and rd_port 0
                 390Register read on rd_port 0
                 390Reg read -> Returned value 0000000d
                 390zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 390Received index as          0 and rd_port 1
                 390Register read on rd_port 1
                 390Reg read -> Returned value 0000000d
                 390Received index as          0 and rd_port 2
                 390Register read on rd_port 2
                 390Reg read -> Returned value 0000000d
                 390Received index as         16 and rd_port 3
                 390Matched ALU destination index 10 ... given as 00000014
                 390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 390PC next =         24 PC current =         20
                 410zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 410Received index as          0 and rd_port 0
                 410Register read on rd_port 0
                 410Reg read -> Returned value 0000000d
                 410zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 410Received index as          0 and rd_port 1
                 410Register read on rd_port 1
                 410Reg read -> Returned value 0000000d
                 410Received index as          0 and rd_port 2
                 410Register read on rd_port 2
                 410Reg read -> Returned value 0000000d
                 410Received index as          0 and rd_port 3
                 410Register read on rd_port 3
                 410Reg read -> Returned value 00000014
                 410PC_nxt before =         24
Normal PC update!
                 410PC_nxt after =         28
PC_nxt =         28
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 410==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 410zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 410zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 410Received index as          0 and rd_port 0
                 410Register read on rd_port 0
                 410Reg read -> Returned value 0000000d
                 410zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 410Received index as          0 and rd_port 1
                 410Register read on rd_port 1
                 410Reg read -> Returned value 0000000d
                 410Received index as          0 and rd_port 2
                 410Register read on rd_port 2
                 410Reg read -> Returned value 0000000d
                 410Received index as          0 and rd_port 3
                 410Register read on rd_port 3
                 410Reg read -> Returned value 0000000d
                 410zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 410PC next =         28 PC current =         24
                 430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 430PC_nxt before =         28
Normal PC update!
                 430PC_nxt after =         32
PC_nxt =         32
                 430zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 430Received index as         15 and rd_port 0
                 430PC requested... given as 0000001c
                 430zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 430Received index as 8589934590 and rd_port 1
                 430Constant detect. Returning fffffffe
                 430Received index as 4294967298 and rd_port 2
                 430Constant detect. Returning 00000002
                 430Received index as          0 and rd_port 3
                 430Register read on rd_port 3
                 430Reg read -> Returned value 0000000d
                 430zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 430Received index as         15 and rd_port 0
                 430PC requested... given as 0000001c
                 430zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 430Received index as 8589934590 and rd_port 1
                 430Constant detect. Returning fffffffe
                 430Received index as 4294967298 and rd_port 2
                 430Constant detect. Returning 00000002
                 430Received index as          0 and rd_port 3
                 430Register read on rd_port 3
                 430Reg read -> Returned value 0000000d
                 430zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 430PC next =         32 PC current =         28
                 450zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 450Received index as          0 and rd_port 0
                 450Register read on rd_port 0
                 450Reg read -> Returned value 0000001c
                 450zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 450Received index as          0 and rd_port 1
                 450Register read on rd_port 1
                 450Reg read -> Returned value xxxxxxxx
                 450Received index as 4294967296 and rd_port 2
                 450Constant detect. Returning 00000000
                 450Received index as          0 and rd_port 3
                 450Register read on rd_port 3
                 450Reg read -> Returned value 0000000d
                 450==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 450zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 450PC_nxt before =         32
Normal PC update!
                 450PC_nxt after =         36
PC_nxt =         36
                 450zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 450Received index as          0 and rd_port 0
                 450Register read on rd_port 0
                 450Reg read -> Returned value 0000000d
                 450zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 450Received index as          0 and rd_port 1
                 450Register read on rd_port 1
                 450Reg read -> Returned value 0000000d
                 450Received index as 4294967296 and rd_port 2
                 450Constant detect. Returning 00000000
                 450Received index as          0 and rd_port 3
                 450Register read on rd_port 3
                 450Reg read -> Returned value 0000000d
                 450PC next =         36 PC current =         32
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 470ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 470Received index as          0 and rd_port 0
                 470Register read on rd_port 0
                 470Reg read -> Returned value 0000000d
                 470zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 470Received index as          0 and rd_port 1
                 470Register read on rd_port 1
                 470Reg read -> Returned value 0000000d
                 470Received index as 4294967296 and rd_port 2
                 470Constant detect. Returning 00000000
                 470Received index as          0 and rd_port 3
                 470Register read on rd_port 3
                 470Reg read -> Returned value 0000000d
                 470PC_nxt before =         36
Clear from ALU!
                 470PC_nxt after =     106496
PC_nxt =     106496
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 470ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470PC_nxt before =         36
Clear from ALU!
                 470PC_nxt after =         20
PC_nxt =         20
                 470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 470zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 470Received index as          0 and rd_port 0
                 470Register read on rd_port 0
                 470Reg read -> Returned value 0000000d
                 470zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 470Received index as          0 and rd_port 1
                 470Register read on rd_port 1
                 470Reg read -> Returned value 0000000d
                 470Received index as 4294967296 and rd_port 2
                 470Constant detect. Returning 00000000
                 470Received index as          0 and rd_port 3
                 470Register read on rd_port 3
                 470Reg read -> Returned value 0000000d
                 470PC next =         20 PC current =         36
                 490PC_nxt before =         20
Clear from ALU!
                 490PC_nxt after =         20
PC_nxt =         20
                 490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 490Received index as          0 and rd_port 0
                 490Matched shifter destination index 000000000 ... given as 00000014
                 490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 490Received index as          0 and rd_port 1
                 490Matched shifter destination index 000000000 ... given as 00000014
                 490Received index as          0 and rd_port 2
                 490Matched shifter destination index 000000000 ... given as 00000014
                 490Received index as         16 and rd_port 3
                 490Matched ALU destination index 10 ... given as 00000014
                 490==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 490zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 490PC_nxt before =         20
Normal PC update!
                 490PC_nxt after =         24
PC_nxt =         24
                 490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 490Received index as          0 and rd_port 0
                 490Register read on rd_port 0
                 490Reg read -> Returned value 0000000d
                 490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 490Received index as          0 and rd_port 1
                 490Register read on rd_port 1
                 490Reg read -> Returned value 0000000d
                 490Received index as          0 and rd_port 2
                 490Register read on rd_port 2
                 490Reg read -> Returned value 0000000d
                 490Received index as         16 and rd_port 3
                 490Matched ALU destination index 10 ... given as 00000014
                 490==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 490zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 490Received index as          0 and rd_port 0
                 490Register read on rd_port 0
                 490Reg read -> Returned value 0000000d
                 490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 490Received index as          0 and rd_port 1
                 490Register read on rd_port 1
                 490Reg read -> Returned value 0000000d
                 490Received index as          0 and rd_port 2
                 490Register read on rd_port 2
                 490Reg read -> Returned value 0000000d
                 490Received index as         16 and rd_port 3
                 490Matched ALU destination index 10 ... given as 00000014
                 490PC next =         24 PC current =         20
                 510zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 510Received index as          0 and rd_port 0
                 510Register read on rd_port 0
                 510Reg read -> Returned value 0000000d
                 510zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 510Received index as          0 and rd_port 1
                 510Register read on rd_port 1
                 510Reg read -> Returned value 0000000d
                 510Received index as          0 and rd_port 2
                 510Register read on rd_port 2
                 510Reg read -> Returned value 0000000d
                 510Received index as          0 and rd_port 3
                 510Register read on rd_port 3
                 510Reg read -> Returned value 00000014
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 510==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 510zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 510PC_nxt before =         24
Normal PC update!
                 510PC_nxt after =         28
PC_nxt =         28
                 510zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 510Received index as          0 and rd_port 0
                 510Register read on rd_port 0
                 510Reg read -> Returned value 0000000d
                 510zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 510Received index as          0 and rd_port 1
                 510Register read on rd_port 1
                 510Reg read -> Returned value 0000000d
                 510Received index as          0 and rd_port 2
                 510Register read on rd_port 2
                 510Reg read -> Returned value 0000000d
                 510Received index as          0 and rd_port 3
                 510Register read on rd_port 3
                 510Reg read -> Returned value 0000000d
                 510zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 510PC next =         28 PC current =         24
                 530PC_nxt before =         28
Normal PC update!
                 530PC_nxt after =         32
PC_nxt =         32
                 530zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 530Received index as         15 and rd_port 0
                 530PC requested... given as 0000001c
                 530zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 530Received index as 8589934590 and rd_port 1
                 530Constant detect. Returning fffffffe
                 530Received index as 4294967298 and rd_port 2
                 530Constant detect. Returning 00000002
                 530Received index as          0 and rd_port 3
                 530Register read on rd_port 3
                 530Reg read -> Returned value 0000000d
                 530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 530zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 530Received index as         15 and rd_port 0
                 530PC requested... given as 0000001c
                 530zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 530Received index as 8589934590 and rd_port 1
                 530Constant detect. Returning fffffffe
                 530Received index as 4294967298 and rd_port 2
                 530Constant detect. Returning 00000002
                 530Received index as          0 and rd_port 3
                 530Register read on rd_port 3
                 530Reg read -> Returned value 0000000d
                 530zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 530PC next =         32 PC current =         28
                 550zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 550Received index as          0 and rd_port 0
                 550Register read on rd_port 0
                 550Reg read -> Returned value 0000001c
                 550zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 550Received index as          0 and rd_port 1
                 550Register read on rd_port 1
                 550Reg read -> Returned value xxxxxxxx
                 550Received index as 4294967296 and rd_port 2
                 550Constant detect. Returning 00000000
                 550Received index as          0 and rd_port 3
                 550Register read on rd_port 3
                 550Reg read -> Returned value 0000000d
                 550==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 550zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 550PC_nxt before =         32
Normal PC update!
                 550PC_nxt after =         36
PC_nxt =         36
                 550zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 550Received index as          0 and rd_port 0
                 550Register read on rd_port 0
                 550Reg read -> Returned value 0000000d
                 550zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 550Received index as          0 and rd_port 1
                 550Register read on rd_port 1
                 550Reg read -> Returned value 0000000d
                 550Received index as 4294967296 and rd_port 2
                 550Constant detect. Returning 00000000
                 550Received index as          0 and rd_port 3
                 550Register read on rd_port 3
                 550Reg read -> Returned value 0000000d
                 550PC next =         36 PC current =         32
                 570PC_nxt before =         36
Normal PC update!
                 570PC_nxt after =         40
PC_nxt =         40
                 570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 570Received index as          0 and rd_port 0
                 570Register read on rd_port 0
                 570Reg read -> Returned value 0000000d
                 570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 570Received index as          0 and rd_port 1
                 570Register read on rd_port 1
                 570Reg read -> Returned value 0000000d
                 570Received index as 4294967296 and rd_port 2
                 570Constant detect. Returning 00000000
                 570Received index as          0 and rd_port 3
                 570Register read on rd_port 3
                 570Reg read -> Returned value 0000000d
                 570ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 570==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 570Received index as          0 and rd_port 0
                 570Register read on rd_port 0
                 570Reg read -> Returned value 0000000d
                 570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 570Received index as          0 and rd_port 1
                 570Register read on rd_port 1
                 570Reg read -> Returned value 0000000d
                 570Received index as 4294967296 and rd_port 2
                 570Constant detect. Returning 00000000
                 570Received index as          0 and rd_port 3
                 570Register read on rd_port 3
                 570Reg read -> Returned value 0000000d
                 570PC_nxt before =         36
Clear from ALU!
                 570PC_nxt after =     106496
PC_nxt =     106496
                 570ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570PC_nxt before =         36
Clear from ALU!
                 570PC_nxt after =         20
PC_nxt =         20
                 570==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 570Received index as          0 and rd_port 0
                 570Register read on rd_port 0
                 570Reg read -> Returned value 0000000d
                 570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 570Received index as          0 and rd_port 1
                 570Register read on rd_port 1
                 570Reg read -> Returned value 0000000d
                 570Received index as 4294967296 and rd_port 2
                 570Constant detect. Returning 00000000
                 570Received index as          0 and rd_port 3
                 570Register read on rd_port 3
                 570Reg read -> Returned value 0000000d
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 570PC next =         20 PC current =         36
                 590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 590zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 590Received index as          0 and rd_port 0
                 590Register read on rd_port 0
                 590Reg read -> Returned value 0000000d
                 590zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 590Received index as          0 and rd_port 1
                 590Register read on rd_port 1
                 590Reg read -> Returned value 0000000d
                 590Received index as          0 and rd_port 2
                 590Register read on rd_port 2
                 590Reg read -> Returned value 0000000d
                 590Received index as         16 and rd_port 3
                 590Matched ALU destination index 10 ... given as 00000014
                 590PC_nxt before =         20
Normal PC update!
                 590PC_nxt after =         24
PC_nxt =         24
                 590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 590zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 590Received index as          0 and rd_port 0
                 590Register read on rd_port 0
                 590Reg read -> Returned value 0000000d
                 590zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 590Received index as          0 and rd_port 1
                 590Register read on rd_port 1
                 590Reg read -> Returned value 0000000d
                 590Received index as          0 and rd_port 2
                 590Register read on rd_port 2
                 590Reg read -> Returned value 0000000d
                 590Received index as         16 and rd_port 3
                 590Matched ALU destination index 10 ... given as 00000014
                 590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 590PC next =         24 PC current =         20
                 610zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 610Received index as          0 and rd_port 0
                 610Register read on rd_port 0
                 610Reg read -> Returned value 0000000d
                 610zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 610Received index as          0 and rd_port 1
                 610Register read on rd_port 1
                 610Reg read -> Returned value 0000000d
                 610Received index as          0 and rd_port 2
                 610Register read on rd_port 2
                 610Reg read -> Returned value 0000000d
                 610Received index as          0 and rd_port 3
                 610Register read on rd_port 3
                 610Reg read -> Returned value 00000014
                 610PC_nxt before =         24
Normal PC update!
                 610PC_nxt after =         28
PC_nxt =         28
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 610==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 610zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 610zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 610Received index as          0 and rd_port 0
                 610Register read on rd_port 0
                 610Reg read -> Returned value 0000000d
                 610zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 610Received index as          0 and rd_port 1
                 610Register read on rd_port 1
                 610Reg read -> Returned value 0000000d
                 610Received index as          0 and rd_port 2
                 610Register read on rd_port 2
                 610Reg read -> Returned value 0000000d
                 610Received index as          0 and rd_port 3
                 610Register read on rd_port 3
                 610Reg read -> Returned value 0000000d
                 610zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 610PC next =         28 PC current =         24
                 630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 630PC_nxt before =         28
Normal PC update!
                 630PC_nxt after =         32
PC_nxt =         32
                 630zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 630Received index as         15 and rd_port 0
                 630PC requested... given as 0000001c
                 630zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 630Received index as 8589934590 and rd_port 1
                 630Constant detect. Returning fffffffe
                 630Received index as 4294967298 and rd_port 2
                 630Constant detect. Returning 00000002
                 630Received index as          0 and rd_port 3
                 630Register read on rd_port 3
                 630Reg read -> Returned value 0000000d
                 630zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 630Received index as         15 and rd_port 0
                 630PC requested... given as 0000001c
                 630zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 630Received index as 8589934590 and rd_port 1
                 630Constant detect. Returning fffffffe
                 630Received index as 4294967298 and rd_port 2
                 630Constant detect. Returning 00000002
                 630Received index as          0 and rd_port 3
                 630Register read on rd_port 3
                 630Reg read -> Returned value 0000000d
                 630zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 630PC next =         32 PC current =         28
                 650zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 650Received index as          0 and rd_port 0
                 650Register read on rd_port 0
                 650Reg read -> Returned value 0000001c
                 650zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 650Received index as          0 and rd_port 1
                 650Register read on rd_port 1
                 650Reg read -> Returned value xxxxxxxx
                 650Received index as 4294967296 and rd_port 2
                 650Constant detect. Returning 00000000
                 650Received index as          0 and rd_port 3
                 650Register read on rd_port 3
                 650Reg read -> Returned value 0000000d
                 650==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 650zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 650PC_nxt before =         32
Normal PC update!
                 650PC_nxt after =         36
PC_nxt =         36
                 650zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 650Received index as          0 and rd_port 0
                 650Register read on rd_port 0
                 650Reg read -> Returned value 0000000d
                 650zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 650Received index as          0 and rd_port 1
                 650Register read on rd_port 1
                 650Reg read -> Returned value 0000000d
                 650Received index as 4294967296 and rd_port 2
                 650Constant detect. Returning 00000000
                 650Received index as          0 and rd_port 3
                 650Register read on rd_port 3
                 650Reg read -> Returned value 0000000d
                 650PC next =         36 PC current =         32
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 670ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 670Received index as          0 and rd_port 0
                 670Register read on rd_port 0
                 670Reg read -> Returned value 0000000d
                 670zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 670Received index as          0 and rd_port 1
                 670Register read on rd_port 1
                 670Reg read -> Returned value 0000000d
                 670Received index as 4294967296 and rd_port 2
                 670Constant detect. Returning 00000000
                 670Received index as          0 and rd_port 3
                 670Register read on rd_port 3
                 670Reg read -> Returned value 0000000d
                 670PC_nxt before =         36
Clear from ALU!
                 670PC_nxt after =     106496
PC_nxt =     106496
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 670ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670PC_nxt before =         36
Clear from ALU!
                 670PC_nxt after =         20
PC_nxt =         20
                 670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 670zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 670Received index as          0 and rd_port 0
                 670Register read on rd_port 0
                 670Reg read -> Returned value 0000000d
                 670zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 670Received index as          0 and rd_port 1
                 670Register read on rd_port 1
                 670Reg read -> Returned value 0000000d
                 670Received index as 4294967296 and rd_port 2
                 670Constant detect. Returning 00000000
                 670Received index as          0 and rd_port 3
                 670Register read on rd_port 3
                 670Reg read -> Returned value 0000000d
                 670PC next =         20 PC current =         36
                 690PC_nxt before =         20
Clear from ALU!
                 690PC_nxt after =         20
PC_nxt =         20
                 690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 690Received index as          0 and rd_port 0
                 690Matched shifter destination index 000000000 ... given as 00000014
                 690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 690Received index as          0 and rd_port 1
                 690Matched shifter destination index 000000000 ... given as 00000014
                 690Received index as          0 and rd_port 2
                 690Matched shifter destination index 000000000 ... given as 00000014
                 690Received index as         16 and rd_port 3
                 690Matched ALU destination index 10 ... given as 00000014
                 690==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 690zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 690PC_nxt before =         20
Normal PC update!
                 690PC_nxt after =         24
PC_nxt =         24
                 690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 690Received index as          0 and rd_port 0
                 690Register read on rd_port 0
                 690Reg read -> Returned value 0000000d
                 690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 690Received index as          0 and rd_port 1
                 690Register read on rd_port 1
                 690Reg read -> Returned value 0000000d
                 690Received index as          0 and rd_port 2
                 690Register read on rd_port 2
                 690Reg read -> Returned value 0000000d
                 690Received index as         16 and rd_port 3
                 690Matched ALU destination index 10 ... given as 00000014
                 690==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 690zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 690Received index as          0 and rd_port 0
                 690Register read on rd_port 0
                 690Reg read -> Returned value 0000000d
                 690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 690Received index as          0 and rd_port 1
                 690Register read on rd_port 1
                 690Reg read -> Returned value 0000000d
                 690Received index as          0 and rd_port 2
                 690Register read on rd_port 2
                 690Reg read -> Returned value 0000000d
                 690Received index as         16 and rd_port 3
                 690Matched ALU destination index 10 ... given as 00000014
                 690PC next =         24 PC current =         20
                 710zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 710Received index as          0 and rd_port 0
                 710Register read on rd_port 0
                 710Reg read -> Returned value 0000000d
                 710zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 710Received index as          0 and rd_port 1
                 710Register read on rd_port 1
                 710Reg read -> Returned value 0000000d
                 710Received index as          0 and rd_port 2
                 710Register read on rd_port 2
                 710Reg read -> Returned value 0000000d
                 710Received index as          0 and rd_port 3
                 710Register read on rd_port 3
                 710Reg read -> Returned value 00000014
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 710==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 710zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 710PC_nxt before =         24
Normal PC update!
                 710PC_nxt after =         28
PC_nxt =         28
                 710zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 710Received index as          0 and rd_port 0
                 710Register read on rd_port 0
                 710Reg read -> Returned value 0000000d
                 710zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 710Received index as          0 and rd_port 1
                 710Register read on rd_port 1
                 710Reg read -> Returned value 0000000d
                 710Received index as          0 and rd_port 2
                 710Register read on rd_port 2
                 710Reg read -> Returned value 0000000d
                 710Received index as          0 and rd_port 3
                 710Register read on rd_port 3
                 710Reg read -> Returned value 0000000d
                 710zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 710PC next =         28 PC current =         24
                 730PC_nxt before =         28
Normal PC update!
                 730PC_nxt after =         32
PC_nxt =         32
                 730zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 730Received index as         15 and rd_port 0
                 730PC requested... given as 0000001c
                 730zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 730Received index as 8589934590 and rd_port 1
                 730Constant detect. Returning fffffffe
                 730Received index as 4294967298 and rd_port 2
                 730Constant detect. Returning 00000002
                 730Received index as          0 and rd_port 3
                 730Register read on rd_port 3
                 730Reg read -> Returned value 0000000d
                 730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 730zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 730Received index as         15 and rd_port 0
                 730PC requested... given as 0000001c
                 730zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 730Received index as 8589934590 and rd_port 1
                 730Constant detect. Returning fffffffe
                 730Received index as 4294967298 and rd_port 2
                 730Constant detect. Returning 00000002
                 730Received index as          0 and rd_port 3
                 730Register read on rd_port 3
                 730Reg read -> Returned value 0000000d
                 730zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 730PC next =         32 PC current =         28
                 750zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 750Received index as          0 and rd_port 0
                 750Register read on rd_port 0
                 750Reg read -> Returned value 0000001c
                 750zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 750Received index as          0 and rd_port 1
                 750Register read on rd_port 1
                 750Reg read -> Returned value xxxxxxxx
                 750Received index as 4294967296 and rd_port 2
                 750Constant detect. Returning 00000000
                 750Received index as          0 and rd_port 3
                 750Register read on rd_port 3
                 750Reg read -> Returned value 0000000d
                 750==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 750zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 750PC_nxt before =         32
Normal PC update!
                 750PC_nxt after =         36
PC_nxt =         36
                 750zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 750Received index as          0 and rd_port 0
                 750Register read on rd_port 0
                 750Reg read -> Returned value 0000000d
                 750zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 750Received index as          0 and rd_port 1
                 750Register read on rd_port 1
                 750Reg read -> Returned value 0000000d
                 750Received index as 4294967296 and rd_port 2
                 750Constant detect. Returning 00000000
                 750Received index as          0 and rd_port 3
                 750Register read on rd_port 3
                 750Reg read -> Returned value 0000000d
                 750PC next =         36 PC current =         32
                 770PC_nxt before =         36
Normal PC update!
                 770PC_nxt after =         40
PC_nxt =         40
                 770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 770Received index as          0 and rd_port 0
                 770Register read on rd_port 0
                 770Reg read -> Returned value 0000000d
                 770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 770Received index as          0 and rd_port 1
                 770Register read on rd_port 1
                 770Reg read -> Returned value 0000000d
                 770Received index as 4294967296 and rd_port 2
                 770Constant detect. Returning 00000000
                 770Received index as          0 and rd_port 3
                 770Register read on rd_port 3
                 770Reg read -> Returned value 0000000d
                 770ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 770==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 770Received index as          0 and rd_port 0
                 770Register read on rd_port 0
                 770Reg read -> Returned value 0000000d
                 770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 770Received index as          0 and rd_port 1
                 770Register read on rd_port 1
                 770Reg read -> Returned value 0000000d
                 770Received index as 4294967296 and rd_port 2
                 770Constant detect. Returning 00000000
                 770Received index as          0 and rd_port 3
                 770Register read on rd_port 3
                 770Reg read -> Returned value 0000000d
                 770PC_nxt before =         36
Clear from ALU!
                 770PC_nxt after =     106496
PC_nxt =     106496
                 770ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770PC_nxt before =         36
Clear from ALU!
                 770PC_nxt after =         20
PC_nxt =         20
                 770==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 770Received index as          0 and rd_port 0
                 770Register read on rd_port 0
                 770Reg read -> Returned value 0000000d
                 770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 770Received index as          0 and rd_port 1
                 770Register read on rd_port 1
                 770Reg read -> Returned value 0000000d
                 770Received index as 4294967296 and rd_port 2
                 770Constant detect. Returning 00000000
                 770Received index as          0 and rd_port 3
                 770Register read on rd_port 3
                 770Reg read -> Returned value 0000000d
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 770PC next =         20 PC current =         36
                 790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 790zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 790Received index as          0 and rd_port 0
                 790Register read on rd_port 0
                 790Reg read -> Returned value 0000000d
                 790zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 790Received index as          0 and rd_port 1
                 790Register read on rd_port 1
                 790Reg read -> Returned value 0000000d
                 790Received index as          0 and rd_port 2
                 790Register read on rd_port 2
                 790Reg read -> Returned value 0000000d
                 790Received index as         16 and rd_port 3
                 790Matched ALU destination index 10 ... given as 00000014
                 790PC_nxt before =         20
Normal PC update!
                 790PC_nxt after =         24
PC_nxt =         24
                 790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 790zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 790Received index as          0 and rd_port 0
                 790Register read on rd_port 0
                 790Reg read -> Returned value 0000000d
                 790zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 790Received index as          0 and rd_port 1
                 790Register read on rd_port 1
                 790Reg read -> Returned value 0000000d
                 790Received index as          0 and rd_port 2
                 790Register read on rd_port 2
                 790Reg read -> Returned value 0000000d
                 790Received index as         16 and rd_port 3
                 790Matched ALU destination index 10 ... given as 00000014
                 790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 790PC next =         24 PC current =         20
                 810zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 810Received index as          0 and rd_port 0
                 810Register read on rd_port 0
                 810Reg read -> Returned value 0000000d
                 810zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 810Received index as          0 and rd_port 1
                 810Register read on rd_port 1
                 810Reg read -> Returned value 0000000d
                 810Received index as          0 and rd_port 2
                 810Register read on rd_port 2
                 810Reg read -> Returned value 0000000d
                 810Received index as          0 and rd_port 3
                 810Register read on rd_port 3
                 810Reg read -> Returned value 00000014
                 810PC_nxt before =         24
Normal PC update!
                 810PC_nxt after =         28
PC_nxt =         28
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 810==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 810zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 810zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 810Received index as          0 and rd_port 0
                 810Register read on rd_port 0
                 810Reg read -> Returned value 0000000d
                 810zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 810Received index as          0 and rd_port 1
                 810Register read on rd_port 1
                 810Reg read -> Returned value 0000000d
                 810Received index as          0 and rd_port 2
                 810Register read on rd_port 2
                 810Reg read -> Returned value 0000000d
                 810Received index as          0 and rd_port 3
                 810Register read on rd_port 3
                 810Reg read -> Returned value 0000000d
                 810zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 810PC next =         28 PC current =         24
                 830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 830PC_nxt before =         28
Normal PC update!
                 830PC_nxt after =         32
PC_nxt =         32
                 830zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 830Received index as         15 and rd_port 0
                 830PC requested... given as 0000001c
                 830zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 830Received index as 8589934590 and rd_port 1
                 830Constant detect. Returning fffffffe
                 830Received index as 4294967298 and rd_port 2
                 830Constant detect. Returning 00000002
                 830Received index as          0 and rd_port 3
                 830Register read on rd_port 3
                 830Reg read -> Returned value 0000000d
                 830zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 830Received index as         15 and rd_port 0
                 830PC requested... given as 0000001c
                 830zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 830Received index as 8589934590 and rd_port 1
                 830Constant detect. Returning fffffffe
                 830Received index as 4294967298 and rd_port 2
                 830Constant detect. Returning 00000002
                 830Received index as          0 and rd_port 3
                 830Register read on rd_port 3
                 830Reg read -> Returned value 0000000d
                 830zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 830PC next =         32 PC current =         28
                 850zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 850Received index as          0 and rd_port 0
                 850Register read on rd_port 0
                 850Reg read -> Returned value 0000001c
                 850zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 850Received index as          0 and rd_port 1
                 850Register read on rd_port 1
                 850Reg read -> Returned value xxxxxxxx
                 850Received index as 4294967296 and rd_port 2
                 850Constant detect. Returning 00000000
                 850Received index as          0 and rd_port 3
                 850Register read on rd_port 3
                 850Reg read -> Returned value 0000000d
                 850==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 850zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 850PC_nxt before =         32
Normal PC update!
                 850PC_nxt after =         36
PC_nxt =         36
                 850zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 850Received index as          0 and rd_port 0
                 850Register read on rd_port 0
                 850Reg read -> Returned value 0000000d
                 850zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 850Received index as          0 and rd_port 1
                 850Register read on rd_port 1
                 850Reg read -> Returned value 0000000d
                 850Received index as 4294967296 and rd_port 2
                 850Constant detect. Returning 00000000
                 850Received index as          0 and rd_port 3
                 850Register read on rd_port 3
                 850Reg read -> Returned value 0000000d
                 850PC next =         36 PC current =         32
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 870ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 870Received index as          0 and rd_port 0
                 870Register read on rd_port 0
                 870Reg read -> Returned value 0000000d
                 870zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 870Received index as          0 and rd_port 1
                 870Register read on rd_port 1
                 870Reg read -> Returned value 0000000d
                 870Received index as 4294967296 and rd_port 2
                 870Constant detect. Returning 00000000
                 870Received index as          0 and rd_port 3
                 870Register read on rd_port 3
                 870Reg read -> Returned value 0000000d
                 870PC_nxt before =         36
Clear from ALU!
                 870PC_nxt after =     106496
PC_nxt =     106496
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 870ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870PC_nxt before =         36
Clear from ALU!
                 870PC_nxt after =         20
PC_nxt =         20
                 870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 870zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 870Received index as          0 and rd_port 0
                 870Register read on rd_port 0
                 870Reg read -> Returned value 0000000d
                 870zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 870Received index as          0 and rd_port 1
                 870Register read on rd_port 1
                 870Reg read -> Returned value 0000000d
                 870Received index as 4294967296 and rd_port 2
                 870Constant detect. Returning 00000000
                 870Received index as          0 and rd_port 3
                 870Register read on rd_port 3
                 870Reg read -> Returned value 0000000d
                 870PC next =         20 PC current =         36
                 890PC_nxt before =         20
Clear from ALU!
                 890PC_nxt after =         20
PC_nxt =         20
                 890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 890Received index as          0 and rd_port 0
                 890Matched shifter destination index 000000000 ... given as 00000014
                 890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 890Received index as          0 and rd_port 1
                 890Matched shifter destination index 000000000 ... given as 00000014
                 890Received index as          0 and rd_port 2
                 890Matched shifter destination index 000000000 ... given as 00000014
                 890Received index as         16 and rd_port 3
                 890Matched ALU destination index 10 ... given as 00000014
                 890==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 890zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 890PC_nxt before =         20
Normal PC update!
                 890PC_nxt after =         24
PC_nxt =         24
                 890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 890Received index as          0 and rd_port 0
                 890Register read on rd_port 0
                 890Reg read -> Returned value 0000000d
                 890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 890Received index as          0 and rd_port 1
                 890Register read on rd_port 1
                 890Reg read -> Returned value 0000000d
                 890Received index as          0 and rd_port 2
                 890Register read on rd_port 2
                 890Reg read -> Returned value 0000000d
                 890Received index as         16 and rd_port 3
                 890Matched ALU destination index 10 ... given as 00000014
                 890==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 890zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 890Received index as          0 and rd_port 0
                 890Register read on rd_port 0
                 890Reg read -> Returned value 0000000d
                 890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 890Received index as          0 and rd_port 1
                 890Register read on rd_port 1
                 890Reg read -> Returned value 0000000d
                 890Received index as          0 and rd_port 2
                 890Register read on rd_port 2
                 890Reg read -> Returned value 0000000d
                 890Received index as         16 and rd_port 3
                 890Matched ALU destination index 10 ... given as 00000014
                 890PC next =         24 PC current =         20
                 910zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 910Received index as          0 and rd_port 0
                 910Register read on rd_port 0
                 910Reg read -> Returned value 0000000d
                 910zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 910Received index as          0 and rd_port 1
                 910Register read on rd_port 1
                 910Reg read -> Returned value 0000000d
                 910Received index as          0 and rd_port 2
                 910Register read on rd_port 2
                 910Reg read -> Returned value 0000000d
                 910Received index as          0 and rd_port 3
                 910Register read on rd_port 3
                 910Reg read -> Returned value 00000014
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 910==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 910zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 910PC_nxt before =         24
Normal PC update!
                 910PC_nxt after =         28
PC_nxt =         28
                 910zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 910Received index as          0 and rd_port 0
                 910Register read on rd_port 0
                 910Reg read -> Returned value 0000000d
                 910zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 910Received index as          0 and rd_port 1
                 910Register read on rd_port 1
                 910Reg read -> Returned value 0000000d
                 910Received index as          0 and rd_port 2
                 910Register read on rd_port 2
                 910Reg read -> Returned value 0000000d
                 910Received index as          0 and rd_port 3
                 910Register read on rd_port 3
                 910Reg read -> Returned value 0000000d
                 910zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                 910PC next =         28 PC current =         24
                 930PC_nxt before =         28
Normal PC update!
                 930PC_nxt after =         32
PC_nxt =         32
                 930zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 930Received index as         15 and rd_port 0
                 930PC requested... given as 0000001c
                 930zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 930Received index as 8589934590 and rd_port 1
                 930Constant detect. Returning fffffffe
                 930Received index as 4294967298 and rd_port 2
                 930Constant detect. Returning 00000002
                 930Received index as          0 and rd_port 3
                 930Register read on rd_port 3
                 930Reg read -> Returned value 0000000d
                 930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                 930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 930zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 930Received index as         15 and rd_port 0
                 930PC requested... given as 0000001c
                 930zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 930Received index as 8589934590 and rd_port 1
                 930Constant detect. Returning fffffffe
                 930Received index as 4294967298 and rd_port 2
                 930Constant detect. Returning 00000002
                 930Received index as          0 and rd_port 3
                 930Register read on rd_port 3
                 930Reg read -> Returned value 0000000d
                 930zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                 930PC next =         32 PC current =         28
                 950zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 950Received index as          0 and rd_port 0
                 950Register read on rd_port 0
                 950Reg read -> Returned value 0000001c
                 950zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 950Received index as          0 and rd_port 1
                 950Register read on rd_port 1
                 950Reg read -> Returned value xxxxxxxx
                 950Received index as 4294967296 and rd_port 2
                 950Constant detect. Returning 00000000
                 950Received index as          0 and rd_port 3
                 950Register read on rd_port 3
                 950Reg read -> Returned value 0000000d
                 950==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                 950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                 950zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 950PC_nxt before =         32
Normal PC update!
                 950PC_nxt after =         36
PC_nxt =         36
                 950zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 950Received index as          0 and rd_port 0
                 950Register read on rd_port 0
                 950Reg read -> Returned value 0000000d
                 950zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 950Received index as          0 and rd_port 1
                 950Register read on rd_port 1
                 950Reg read -> Returned value 0000000d
                 950Received index as 4294967296 and rd_port 2
                 950Constant detect. Returning 00000000
                 950Received index as          0 and rd_port 3
                 950Register read on rd_port 3
                 950Reg read -> Returned value 0000000d
                 950PC next =         36 PC current =         32
                 970PC_nxt before =         36
Normal PC update!
                 970PC_nxt after =         40
PC_nxt =         40
                 970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 970Received index as          0 and rd_port 0
                 970Register read on rd_port 0
                 970Reg read -> Returned value 0000000d
                 970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 970Received index as          0 and rd_port 1
                 970Register read on rd_port 1
                 970Reg read -> Returned value 0000000d
                 970Received index as 4294967296 and rd_port 2
                 970Constant detect. Returning 00000000
                 970Received index as          0 and rd_port 3
                 970Register read on rd_port 3
                 970Reg read -> Returned value 0000000d
                 970ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 970==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 970Received index as          0 and rd_port 0
                 970Register read on rd_port 0
                 970Reg read -> Returned value 0000000d
                 970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 970Received index as          0 and rd_port 1
                 970Register read on rd_port 1
                 970Reg read -> Returned value 0000000d
                 970Received index as 4294967296 and rd_port 2
                 970Constant detect. Returning 00000000
                 970Received index as          0 and rd_port 3
                 970Register read on rd_port 3
                 970Reg read -> Returned value 0000000d
                 970PC_nxt before =         36
Clear from ALU!
                 970PC_nxt after =     106496
PC_nxt =     106496
                 970ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970PC_nxt before =         36
Clear from ALU!
                 970PC_nxt after =         20
PC_nxt =         20
                 970==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 970Received index as          0 and rd_port 0
                 970Register read on rd_port 0
                 970Reg read -> Returned value 0000000d
                 970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 970Received index as          0 and rd_port 1
                 970Register read on rd_port 1
                 970Reg read -> Returned value 0000000d
                 970Received index as 4294967296 and rd_port 2
                 970Constant detect. Returning 00000000
                 970Received index as          0 and rd_port 3
                 970Register read on rd_port 3
                 970Reg read -> Returned value 0000000d
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                 970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                 970PC next =         20 PC current =         36
                 990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                 990zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 990Received index as          0 and rd_port 0
                 990Register read on rd_port 0
                 990Reg read -> Returned value 0000000d
                 990zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 990Received index as          0 and rd_port 1
                 990Register read on rd_port 1
                 990Reg read -> Returned value 0000000d
                 990Received index as          0 and rd_port 2
                 990Register read on rd_port 2
                 990Reg read -> Returned value 0000000d
                 990Received index as         16 and rd_port 3
                 990Matched ALU destination index 10 ... given as 00000014
                 990PC_nxt before =         20
Normal PC update!
                 990PC_nxt after =         24
PC_nxt =         24
                 990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                 990zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                 990Received index as          0 and rd_port 0
                 990Register read on rd_port 0
                 990Reg read -> Returned value 0000000d
                 990zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                 990Received index as          0 and rd_port 1
                 990Register read on rd_port 1
                 990Reg read -> Returned value 0000000d
                 990Received index as          0 and rd_port 2
                 990Register read on rd_port 2
                 990Reg read -> Returned value 0000000d
                 990Received index as         16 and rd_port 3
                 990Matched ALU destination index 10 ... given as 00000014
                 990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                 990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                 990PC next =         24 PC current =         20
                1010zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1010Received index as          0 and rd_port 0
                1010Register read on rd_port 0
                1010Reg read -> Returned value 0000000d
                1010zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1010Received index as          0 and rd_port 1
                1010Register read on rd_port 1
                1010Reg read -> Returned value 0000000d
                1010Received index as          0 and rd_port 2
                1010Register read on rd_port 2
                1010Reg read -> Returned value 0000000d
                1010Received index as          0 and rd_port 3
                1010Register read on rd_port 3
                1010Reg read -> Returned value 00000014
                1010PC_nxt before =         24
Normal PC update!
                1010PC_nxt after =         28
PC_nxt =         28
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1010==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1010zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1010zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1010Received index as          0 and rd_port 0
                1010Register read on rd_port 0
                1010Reg read -> Returned value 0000000d
                1010zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1010Received index as          0 and rd_port 1
                1010Register read on rd_port 1
                1010Reg read -> Returned value 0000000d
                1010Received index as          0 and rd_port 2
                1010Register read on rd_port 2
                1010Reg read -> Returned value 0000000d
                1010Received index as          0 and rd_port 3
                1010Register read on rd_port 3
                1010Reg read -> Returned value 0000000d
                1010zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1010PC next =         28 PC current =         24
                1030zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1030zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1030zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1030zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1030zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1030PC_nxt before =         28
Normal PC update!
                1030PC_nxt after =         32
PC_nxt =         32
                1030zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1030Received index as         15 and rd_port 0
                1030PC requested... given as 0000001c
                1030zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1030Received index as 8589934590 and rd_port 1
                1030Constant detect. Returning fffffffe
                1030Received index as 4294967298 and rd_port 2
                1030Constant detect. Returning 00000002
                1030Received index as          0 and rd_port 3
                1030Register read on rd_port 3
                1030Reg read -> Returned value 0000000d
                1030zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1030Received index as         15 and rd_port 0
                1030PC requested... given as 0000001c
                1030zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1030Received index as 8589934590 and rd_port 1
                1030Constant detect. Returning fffffffe
                1030Received index as 4294967298 and rd_port 2
                1030Constant detect. Returning 00000002
                1030Received index as          0 and rd_port 3
                1030Register read on rd_port 3
                1030Reg read -> Returned value 0000000d
                1030zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1030PC next =         32 PC current =         28
                1050zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1050Received index as          0 and rd_port 0
                1050Register read on rd_port 0
                1050Reg read -> Returned value 0000001c
                1050zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1050Received index as          0 and rd_port 1
                1050Register read on rd_port 1
                1050Reg read -> Returned value xxxxxxxx
                1050Received index as 4294967296 and rd_port 2
                1050Constant detect. Returning 00000000
                1050Received index as          0 and rd_port 3
                1050Register read on rd_port 3
                1050Reg read -> Returned value 0000000d
                1050==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1050zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1050zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1050zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1050zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1050zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1050zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1050PC_nxt before =         32
Normal PC update!
                1050PC_nxt after =         36
PC_nxt =         36
                1050zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1050Received index as          0 and rd_port 0
                1050Register read on rd_port 0
                1050Reg read -> Returned value 0000000d
                1050zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1050Received index as          0 and rd_port 1
                1050Register read on rd_port 1
                1050Reg read -> Returned value 0000000d
                1050Received index as 4294967296 and rd_port 2
                1050Constant detect. Returning 00000000
                1050Received index as          0 and rd_port 3
                1050Register read on rd_port 3
                1050Reg read -> Returned value 0000000d
                1050PC next =         36 PC current =         32
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1070ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1070Received index as          0 and rd_port 0
                1070Register read on rd_port 0
                1070Reg read -> Returned value 0000000d
                1070zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1070Received index as          0 and rd_port 1
                1070Register read on rd_port 1
                1070Reg read -> Returned value 0000000d
                1070Received index as 4294967296 and rd_port 2
                1070Constant detect. Returning 00000000
                1070Received index as          0 and rd_port 3
                1070Register read on rd_port 3
                1070Reg read -> Returned value 0000000d
                1070PC_nxt before =         36
Clear from ALU!
                1070PC_nxt after =     106496
PC_nxt =     106496
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1070ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070PC_nxt before =         36
Clear from ALU!
                1070PC_nxt after =         20
PC_nxt =         20
                1070==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1070zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1070zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1070Received index as          0 and rd_port 0
                1070Register read on rd_port 0
                1070Reg read -> Returned value 0000000d
                1070zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1070Received index as          0 and rd_port 1
                1070Register read on rd_port 1
                1070Reg read -> Returned value 0000000d
                1070Received index as 4294967296 and rd_port 2
                1070Constant detect. Returning 00000000
                1070Received index as          0 and rd_port 3
                1070Register read on rd_port 3
                1070Reg read -> Returned value 0000000d
                1070PC next =         20 PC current =         36
                1090PC_nxt before =         20
Clear from ALU!
                1090PC_nxt after =         20
PC_nxt =         20
                1090zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1090Received index as          0 and rd_port 0
                1090Matched shifter destination index 000000000 ... given as 00000014
                1090zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1090Received index as          0 and rd_port 1
                1090Matched shifter destination index 000000000 ... given as 00000014
                1090Received index as          0 and rd_port 2
                1090Matched shifter destination index 000000000 ... given as 00000014
                1090Received index as         16 and rd_port 3
                1090Matched ALU destination index 10 ... given as 00000014
                1090==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1090zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1090PC_nxt before =         20
Normal PC update!
                1090PC_nxt after =         24
PC_nxt =         24
                1090zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1090Received index as          0 and rd_port 0
                1090Register read on rd_port 0
                1090Reg read -> Returned value 0000000d
                1090zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1090Received index as          0 and rd_port 1
                1090Register read on rd_port 1
                1090Reg read -> Returned value 0000000d
                1090Received index as          0 and rd_port 2
                1090Register read on rd_port 2
                1090Reg read -> Returned value 0000000d
                1090Received index as         16 and rd_port 3
                1090Matched ALU destination index 10 ... given as 00000014
                1090==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1090zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1090zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1090zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1090Received index as          0 and rd_port 0
                1090Register read on rd_port 0
                1090Reg read -> Returned value 0000000d
                1090zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1090Received index as          0 and rd_port 1
                1090Register read on rd_port 1
                1090Reg read -> Returned value 0000000d
                1090Received index as          0 and rd_port 2
                1090Register read on rd_port 2
                1090Reg read -> Returned value 0000000d
                1090Received index as         16 and rd_port 3
                1090Matched ALU destination index 10 ... given as 00000014
                1090PC next =         24 PC current =         20
                1110zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1110Received index as          0 and rd_port 0
                1110Register read on rd_port 0
                1110Reg read -> Returned value 0000000d
                1110zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1110Received index as          0 and rd_port 1
                1110Register read on rd_port 1
                1110Reg read -> Returned value 0000000d
                1110Received index as          0 and rd_port 2
                1110Register read on rd_port 2
                1110Reg read -> Returned value 0000000d
                1110Received index as          0 and rd_port 3
                1110Register read on rd_port 3
                1110Reg read -> Returned value 00000014
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1110==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1110zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1110zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1110PC_nxt before =         24
Normal PC update!
                1110PC_nxt after =         28
PC_nxt =         28
                1110zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1110Received index as          0 and rd_port 0
                1110Register read on rd_port 0
                1110Reg read -> Returned value 0000000d
                1110zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1110Received index as          0 and rd_port 1
                1110Register read on rd_port 1
                1110Reg read -> Returned value 0000000d
                1110Received index as          0 and rd_port 2
                1110Register read on rd_port 2
                1110Reg read -> Returned value 0000000d
                1110Received index as          0 and rd_port 3
                1110Register read on rd_port 3
                1110Reg read -> Returned value 0000000d
                1110zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1110PC next =         28 PC current =         24
                1130PC_nxt before =         28
Normal PC update!
                1130PC_nxt after =         32
PC_nxt =         32
                1130zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1130Received index as         15 and rd_port 0
                1130PC requested... given as 0000001c
                1130zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1130Received index as 8589934590 and rd_port 1
                1130Constant detect. Returning fffffffe
                1130Received index as 4294967298 and rd_port 2
                1130Constant detect. Returning 00000002
                1130Received index as          0 and rd_port 3
                1130Register read on rd_port 3
                1130Reg read -> Returned value 0000000d
                1130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1130zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1130zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1130Received index as         15 and rd_port 0
                1130PC requested... given as 0000001c
                1130zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1130Received index as 8589934590 and rd_port 1
                1130Constant detect. Returning fffffffe
                1130Received index as 4294967298 and rd_port 2
                1130Constant detect. Returning 00000002
                1130Received index as          0 and rd_port 3
                1130Register read on rd_port 3
                1130Reg read -> Returned value 0000000d
                1130zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1130PC next =         32 PC current =         28
                1150zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1150Received index as          0 and rd_port 0
                1150Register read on rd_port 0
                1150Reg read -> Returned value 0000001c
                1150zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1150Received index as          0 and rd_port 1
                1150Register read on rd_port 1
                1150Reg read -> Returned value xxxxxxxx
                1150Received index as 4294967296 and rd_port 2
                1150Constant detect. Returning 00000000
                1150Received index as          0 and rd_port 3
                1150Register read on rd_port 3
                1150Reg read -> Returned value 0000000d
                1150==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1150zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1150zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1150PC_nxt before =         32
Normal PC update!
                1150PC_nxt after =         36
PC_nxt =         36
                1150zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1150Received index as          0 and rd_port 0
                1150Register read on rd_port 0
                1150Reg read -> Returned value 0000000d
                1150zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1150Received index as          0 and rd_port 1
                1150Register read on rd_port 1
                1150Reg read -> Returned value 0000000d
                1150Received index as 4294967296 and rd_port 2
                1150Constant detect. Returning 00000000
                1150Received index as          0 and rd_port 3
                1150Register read on rd_port 3
                1150Reg read -> Returned value 0000000d
                1150PC next =         36 PC current =         32
                1170PC_nxt before =         36
Normal PC update!
                1170PC_nxt after =         40
PC_nxt =         40
                1170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1170Received index as          0 and rd_port 0
                1170Register read on rd_port 0
                1170Reg read -> Returned value 0000000d
                1170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1170Received index as          0 and rd_port 1
                1170Register read on rd_port 1
                1170Reg read -> Returned value 0000000d
                1170Received index as 4294967296 and rd_port 2
                1170Constant detect. Returning 00000000
                1170Received index as          0 and rd_port 3
                1170Register read on rd_port 3
                1170Reg read -> Returned value 0000000d
                1170ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1170==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1170Received index as          0 and rd_port 0
                1170Register read on rd_port 0
                1170Reg read -> Returned value 0000000d
                1170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1170Received index as          0 and rd_port 1
                1170Register read on rd_port 1
                1170Reg read -> Returned value 0000000d
                1170Received index as 4294967296 and rd_port 2
                1170Constant detect. Returning 00000000
                1170Received index as          0 and rd_port 3
                1170Register read on rd_port 3
                1170Reg read -> Returned value 0000000d
                1170PC_nxt before =         36
Clear from ALU!
                1170PC_nxt after =     106496
PC_nxt =     106496
                1170ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170PC_nxt before =         36
Clear from ALU!
                1170PC_nxt after =         20
PC_nxt =         20
                1170==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1170Received index as          0 and rd_port 0
                1170Register read on rd_port 0
                1170Reg read -> Returned value 0000000d
                1170zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1170Received index as          0 and rd_port 1
                1170Register read on rd_port 1
                1170Reg read -> Returned value 0000000d
                1170Received index as 4294967296 and rd_port 2
                1170Constant detect. Returning 00000000
                1170Received index as          0 and rd_port 3
                1170Register read on rd_port 3
                1170Reg read -> Returned value 0000000d
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1170zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1170PC next =         20 PC current =         36
                1190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1190zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1190Received index as          0 and rd_port 0
                1190Register read on rd_port 0
                1190Reg read -> Returned value 0000000d
                1190zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1190Received index as          0 and rd_port 1
                1190Register read on rd_port 1
                1190Reg read -> Returned value 0000000d
                1190Received index as          0 and rd_port 2
                1190Register read on rd_port 2
                1190Reg read -> Returned value 0000000d
                1190Received index as         16 and rd_port 3
                1190Matched ALU destination index 10 ... given as 00000014
                1190PC_nxt before =         20
Normal PC update!
                1190PC_nxt after =         24
PC_nxt =         24
                1190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1190zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1190Received index as          0 and rd_port 0
                1190Register read on rd_port 0
                1190Reg read -> Returned value 0000000d
                1190zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1190Received index as          0 and rd_port 1
                1190Register read on rd_port 1
                1190Reg read -> Returned value 0000000d
                1190Received index as          0 and rd_port 2
                1190Register read on rd_port 2
                1190Reg read -> Returned value 0000000d
                1190Received index as         16 and rd_port 3
                1190Matched ALU destination index 10 ... given as 00000014
                1190==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1190zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1190zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1190PC next =         24 PC current =         20
                1210zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1210Received index as          0 and rd_port 0
                1210Register read on rd_port 0
                1210Reg read -> Returned value 0000000d
                1210zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1210Received index as          0 and rd_port 1
                1210Register read on rd_port 1
                1210Reg read -> Returned value 0000000d
                1210Received index as          0 and rd_port 2
                1210Register read on rd_port 2
                1210Reg read -> Returned value 0000000d
                1210Received index as          0 and rd_port 3
                1210Register read on rd_port 3
                1210Reg read -> Returned value 00000014
                1210PC_nxt before =         24
Normal PC update!
                1210PC_nxt after =         28
PC_nxt =         28
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1210==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1210zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1210zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1210zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1210Received index as          0 and rd_port 0
                1210Register read on rd_port 0
                1210Reg read -> Returned value 0000000d
                1210zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1210Received index as          0 and rd_port 1
                1210Register read on rd_port 1
                1210Reg read -> Returned value 0000000d
                1210Received index as          0 and rd_port 2
                1210Register read on rd_port 2
                1210Reg read -> Returned value 0000000d
                1210Received index as          0 and rd_port 3
                1210Register read on rd_port 3
                1210Reg read -> Returned value 0000000d
                1210zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1210PC next =         28 PC current =         24
                1230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1230zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1230PC_nxt before =         28
Normal PC update!
                1230PC_nxt after =         32
PC_nxt =         32
                1230zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1230Received index as         15 and rd_port 0
                1230PC requested... given as 0000001c
                1230zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1230Received index as 8589934590 and rd_port 1
                1230Constant detect. Returning fffffffe
                1230Received index as 4294967298 and rd_port 2
                1230Constant detect. Returning 00000002
                1230Received index as          0 and rd_port 3
                1230Register read on rd_port 3
                1230Reg read -> Returned value 0000000d
                1230zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1230Received index as         15 and rd_port 0
                1230PC requested... given as 0000001c
                1230zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1230Received index as 8589934590 and rd_port 1
                1230Constant detect. Returning fffffffe
                1230Received index as 4294967298 and rd_port 2
                1230Constant detect. Returning 00000002
                1230Received index as          0 and rd_port 3
                1230Register read on rd_port 3
                1230Reg read -> Returned value 0000000d
                1230zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1230PC next =         32 PC current =         28
                1250zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1250Received index as          0 and rd_port 0
                1250Register read on rd_port 0
                1250Reg read -> Returned value 0000001c
                1250zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1250Received index as          0 and rd_port 1
                1250Register read on rd_port 1
                1250Reg read -> Returned value xxxxxxxx
                1250Received index as 4294967296 and rd_port 2
                1250Constant detect. Returning 00000000
                1250Received index as          0 and rd_port 3
                1250Register read on rd_port 3
                1250Reg read -> Returned value 0000000d
                1250==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1250zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1250zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1250PC_nxt before =         32
Normal PC update!
                1250PC_nxt after =         36
PC_nxt =         36
                1250zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1250Received index as          0 and rd_port 0
                1250Register read on rd_port 0
                1250Reg read -> Returned value 0000000d
                1250zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1250Received index as          0 and rd_port 1
                1250Register read on rd_port 1
                1250Reg read -> Returned value 0000000d
                1250Received index as 4294967296 and rd_port 2
                1250Constant detect. Returning 00000000
                1250Received index as          0 and rd_port 3
                1250Register read on rd_port 3
                1250Reg read -> Returned value 0000000d
                1250PC next =         36 PC current =         32
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1270ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1270Received index as          0 and rd_port 0
                1270Register read on rd_port 0
                1270Reg read -> Returned value 0000000d
                1270zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1270Received index as          0 and rd_port 1
                1270Register read on rd_port 1
                1270Reg read -> Returned value 0000000d
                1270Received index as 4294967296 and rd_port 2
                1270Constant detect. Returning 00000000
                1270Received index as          0 and rd_port 3
                1270Register read on rd_port 3
                1270Reg read -> Returned value 0000000d
                1270PC_nxt before =         36
Clear from ALU!
                1270PC_nxt after =     106496
PC_nxt =     106496
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1270ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270PC_nxt before =         36
Clear from ALU!
                1270PC_nxt after =         20
PC_nxt =         20
                1270==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1270zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1270zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1270Received index as          0 and rd_port 0
                1270Register read on rd_port 0
                1270Reg read -> Returned value 0000000d
                1270zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1270Received index as          0 and rd_port 1
                1270Register read on rd_port 1
                1270Reg read -> Returned value 0000000d
                1270Received index as 4294967296 and rd_port 2
                1270Constant detect. Returning 00000000
                1270Received index as          0 and rd_port 3
                1270Register read on rd_port 3
                1270Reg read -> Returned value 0000000d
                1270PC next =         20 PC current =         36
                1290PC_nxt before =         20
Clear from ALU!
                1290PC_nxt after =         20
PC_nxt =         20
                1290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1290Received index as          0 and rd_port 0
                1290Matched shifter destination index 000000000 ... given as 00000014
                1290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1290Received index as          0 and rd_port 1
                1290Matched shifter destination index 000000000 ... given as 00000014
                1290Received index as          0 and rd_port 2
                1290Matched shifter destination index 000000000 ... given as 00000014
                1290Received index as         16 and rd_port 3
                1290Matched ALU destination index 10 ... given as 00000014
                1290==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1290zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1290PC_nxt before =         20
Normal PC update!
                1290PC_nxt after =         24
PC_nxt =         24
                1290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1290Received index as          0 and rd_port 0
                1290Register read on rd_port 0
                1290Reg read -> Returned value 0000000d
                1290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1290Received index as          0 and rd_port 1
                1290Register read on rd_port 1
                1290Reg read -> Returned value 0000000d
                1290Received index as          0 and rd_port 2
                1290Register read on rd_port 2
                1290Reg read -> Returned value 0000000d
                1290Received index as         16 and rd_port 3
                1290Matched ALU destination index 10 ... given as 00000014
                1290==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1290zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1290zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1290zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1290Received index as          0 and rd_port 0
                1290Register read on rd_port 0
                1290Reg read -> Returned value 0000000d
                1290zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1290Received index as          0 and rd_port 1
                1290Register read on rd_port 1
                1290Reg read -> Returned value 0000000d
                1290Received index as          0 and rd_port 2
                1290Register read on rd_port 2
                1290Reg read -> Returned value 0000000d
                1290Received index as         16 and rd_port 3
                1290Matched ALU destination index 10 ... given as 00000014
                1290PC next =         24 PC current =         20
                1310zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1310Received index as          0 and rd_port 0
                1310Register read on rd_port 0
                1310Reg read -> Returned value 0000000d
                1310zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1310Received index as          0 and rd_port 1
                1310Register read on rd_port 1
                1310Reg read -> Returned value 0000000d
                1310Received index as          0 and rd_port 2
                1310Register read on rd_port 2
                1310Reg read -> Returned value 0000000d
                1310Received index as          0 and rd_port 3
                1310Register read on rd_port 3
                1310Reg read -> Returned value 00000014
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1310==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1310zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1310zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1310PC_nxt before =         24
Normal PC update!
                1310PC_nxt after =         28
PC_nxt =         28
                1310zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1310Received index as          0 and rd_port 0
                1310Register read on rd_port 0
                1310Reg read -> Returned value 0000000d
                1310zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1310Received index as          0 and rd_port 1
                1310Register read on rd_port 1
                1310Reg read -> Returned value 0000000d
                1310Received index as          0 and rd_port 2
                1310Register read on rd_port 2
                1310Reg read -> Returned value 0000000d
                1310Received index as          0 and rd_port 3
                1310Register read on rd_port 3
                1310Reg read -> Returned value 0000000d
                1310zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1310PC next =         28 PC current =         24
                1330PC_nxt before =         28
Normal PC update!
                1330PC_nxt after =         32
PC_nxt =         32
                1330zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1330Received index as         15 and rd_port 0
                1330PC requested... given as 0000001c
                1330zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1330Received index as 8589934590 and rd_port 1
                1330Constant detect. Returning fffffffe
                1330Received index as 4294967298 and rd_port 2
                1330Constant detect. Returning 00000002
                1330Received index as          0 and rd_port 3
                1330Register read on rd_port 3
                1330Reg read -> Returned value 0000000d
                1330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1330zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1330zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1330Received index as         15 and rd_port 0
                1330PC requested... given as 0000001c
                1330zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1330Received index as 8589934590 and rd_port 1
                1330Constant detect. Returning fffffffe
                1330Received index as 4294967298 and rd_port 2
                1330Constant detect. Returning 00000002
                1330Received index as          0 and rd_port 3
                1330Register read on rd_port 3
                1330Reg read -> Returned value 0000000d
                1330zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1330PC next =         32 PC current =         28
                1350zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1350Received index as          0 and rd_port 0
                1350Register read on rd_port 0
                1350Reg read -> Returned value 0000001c
                1350zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1350Received index as          0 and rd_port 1
                1350Register read on rd_port 1
                1350Reg read -> Returned value xxxxxxxx
                1350Received index as 4294967296 and rd_port 2
                1350Constant detect. Returning 00000000
                1350Received index as          0 and rd_port 3
                1350Register read on rd_port 3
                1350Reg read -> Returned value 0000000d
                1350==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1350zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1350zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1350PC_nxt before =         32
Normal PC update!
                1350PC_nxt after =         36
PC_nxt =         36
                1350zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1350Received index as          0 and rd_port 0
                1350Register read on rd_port 0
                1350Reg read -> Returned value 0000000d
                1350zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1350Received index as          0 and rd_port 1
                1350Register read on rd_port 1
                1350Reg read -> Returned value 0000000d
                1350Received index as 4294967296 and rd_port 2
                1350Constant detect. Returning 00000000
                1350Received index as          0 and rd_port 3
                1350Register read on rd_port 3
                1350Reg read -> Returned value 0000000d
                1350PC next =         36 PC current =         32
                1370PC_nxt before =         36
Normal PC update!
                1370PC_nxt after =         40
PC_nxt =         40
                1370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1370Received index as          0 and rd_port 0
                1370Register read on rd_port 0
                1370Reg read -> Returned value 0000000d
                1370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1370Received index as          0 and rd_port 1
                1370Register read on rd_port 1
                1370Reg read -> Returned value 0000000d
                1370Received index as 4294967296 and rd_port 2
                1370Constant detect. Returning 00000000
                1370Received index as          0 and rd_port 3
                1370Register read on rd_port 3
                1370Reg read -> Returned value 0000000d
                1370ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1370==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1370Received index as          0 and rd_port 0
                1370Register read on rd_port 0
                1370Reg read -> Returned value 0000000d
                1370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1370Received index as          0 and rd_port 1
                1370Register read on rd_port 1
                1370Reg read -> Returned value 0000000d
                1370Received index as 4294967296 and rd_port 2
                1370Constant detect. Returning 00000000
                1370Received index as          0 and rd_port 3
                1370Register read on rd_port 3
                1370Reg read -> Returned value 0000000d
                1370PC_nxt before =         36
Clear from ALU!
                1370PC_nxt after =     106496
PC_nxt =     106496
                1370ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370PC_nxt before =         36
Clear from ALU!
                1370PC_nxt after =         20
PC_nxt =         20
                1370==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1370Received index as          0 and rd_port 0
                1370Register read on rd_port 0
                1370Reg read -> Returned value 0000000d
                1370zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1370Received index as          0 and rd_port 1
                1370Register read on rd_port 1
                1370Reg read -> Returned value 0000000d
                1370Received index as 4294967296 and rd_port 2
                1370Constant detect. Returning 00000000
                1370Received index as          0 and rd_port 3
                1370Register read on rd_port 3
                1370Reg read -> Returned value 0000000d
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1370zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1370PC next =         20 PC current =         36
                1390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1390zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1390Received index as          0 and rd_port 0
                1390Register read on rd_port 0
                1390Reg read -> Returned value 0000000d
                1390zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1390Received index as          0 and rd_port 1
                1390Register read on rd_port 1
                1390Reg read -> Returned value 0000000d
                1390Received index as          0 and rd_port 2
                1390Register read on rd_port 2
                1390Reg read -> Returned value 0000000d
                1390Received index as         16 and rd_port 3
                1390Matched ALU destination index 10 ... given as 00000014
                1390PC_nxt before =         20
Normal PC update!
                1390PC_nxt after =         24
PC_nxt =         24
                1390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1390zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1390Received index as          0 and rd_port 0
                1390Register read on rd_port 0
                1390Reg read -> Returned value 0000000d
                1390zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1390Received index as          0 and rd_port 1
                1390Register read on rd_port 1
                1390Reg read -> Returned value 0000000d
                1390Received index as          0 and rd_port 2
                1390Register read on rd_port 2
                1390Reg read -> Returned value 0000000d
                1390Received index as         16 and rd_port 3
                1390Matched ALU destination index 10 ... given as 00000014
                1390==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1390zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1390zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1390PC next =         24 PC current =         20
                1410zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1410Received index as          0 and rd_port 0
                1410Register read on rd_port 0
                1410Reg read -> Returned value 0000000d
                1410zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1410Received index as          0 and rd_port 1
                1410Register read on rd_port 1
                1410Reg read -> Returned value 0000000d
                1410Received index as          0 and rd_port 2
                1410Register read on rd_port 2
                1410Reg read -> Returned value 0000000d
                1410Received index as          0 and rd_port 3
                1410Register read on rd_port 3
                1410Reg read -> Returned value 00000014
                1410PC_nxt before =         24
Normal PC update!
                1410PC_nxt after =         28
PC_nxt =         28
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1410==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1410zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1410zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1410zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1410Received index as          0 and rd_port 0
                1410Register read on rd_port 0
                1410Reg read -> Returned value 0000000d
                1410zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1410Received index as          0 and rd_port 1
                1410Register read on rd_port 1
                1410Reg read -> Returned value 0000000d
                1410Received index as          0 and rd_port 2
                1410Register read on rd_port 2
                1410Reg read -> Returned value 0000000d
                1410Received index as          0 and rd_port 3
                1410Register read on rd_port 3
                1410Reg read -> Returned value 0000000d
                1410zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1410PC next =         28 PC current =         24
                1430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1430zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1430PC_nxt before =         28
Normal PC update!
                1430PC_nxt after =         32
PC_nxt =         32
                1430zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1430Received index as         15 and rd_port 0
                1430PC requested... given as 0000001c
                1430zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1430Received index as 8589934590 and rd_port 1
                1430Constant detect. Returning fffffffe
                1430Received index as 4294967298 and rd_port 2
                1430Constant detect. Returning 00000002
                1430Received index as          0 and rd_port 3
                1430Register read on rd_port 3
                1430Reg read -> Returned value 0000000d
                1430zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1430Received index as         15 and rd_port 0
                1430PC requested... given as 0000001c
                1430zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1430Received index as 8589934590 and rd_port 1
                1430Constant detect. Returning fffffffe
                1430Received index as 4294967298 and rd_port 2
                1430Constant detect. Returning 00000002
                1430Received index as          0 and rd_port 3
                1430Register read on rd_port 3
                1430Reg read -> Returned value 0000000d
                1430zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1430PC next =         32 PC current =         28
                1450zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1450Received index as          0 and rd_port 0
                1450Register read on rd_port 0
                1450Reg read -> Returned value 0000001c
                1450zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1450Received index as          0 and rd_port 1
                1450Register read on rd_port 1
                1450Reg read -> Returned value xxxxxxxx
                1450Received index as 4294967296 and rd_port 2
                1450Constant detect. Returning 00000000
                1450Received index as          0 and rd_port 3
                1450Register read on rd_port 3
                1450Reg read -> Returned value 0000000d
                1450==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1450zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1450zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1450PC_nxt before =         32
Normal PC update!
                1450PC_nxt after =         36
PC_nxt =         36
                1450zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1450Received index as          0 and rd_port 0
                1450Register read on rd_port 0
                1450Reg read -> Returned value 0000000d
                1450zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1450Received index as          0 and rd_port 1
                1450Register read on rd_port 1
                1450Reg read -> Returned value 0000000d
                1450Received index as 4294967296 and rd_port 2
                1450Constant detect. Returning 00000000
                1450Received index as          0 and rd_port 3
                1450Register read on rd_port 3
                1450Reg read -> Returned value 0000000d
                1450PC next =         36 PC current =         32
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1470ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1470Received index as          0 and rd_port 0
                1470Register read on rd_port 0
                1470Reg read -> Returned value 0000000d
                1470zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1470Received index as          0 and rd_port 1
                1470Register read on rd_port 1
                1470Reg read -> Returned value 0000000d
                1470Received index as 4294967296 and rd_port 2
                1470Constant detect. Returning 00000000
                1470Received index as          0 and rd_port 3
                1470Register read on rd_port 3
                1470Reg read -> Returned value 0000000d
                1470PC_nxt before =         36
Clear from ALU!
                1470PC_nxt after =     106496
PC_nxt =     106496
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1470ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470PC_nxt before =         36
Clear from ALU!
                1470PC_nxt after =         20
PC_nxt =         20
                1470==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1470zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1470zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1470Received index as          0 and rd_port 0
                1470Register read on rd_port 0
                1470Reg read -> Returned value 0000000d
                1470zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1470Received index as          0 and rd_port 1
                1470Register read on rd_port 1
                1470Reg read -> Returned value 0000000d
                1470Received index as 4294967296 and rd_port 2
                1470Constant detect. Returning 00000000
                1470Received index as          0 and rd_port 3
                1470Register read on rd_port 3
                1470Reg read -> Returned value 0000000d
                1470PC next =         20 PC current =         36
                1490PC_nxt before =         20
Clear from ALU!
                1490PC_nxt after =         20
PC_nxt =         20
                1490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1490Received index as          0 and rd_port 0
                1490Matched shifter destination index 000000000 ... given as 00000014
                1490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1490Received index as          0 and rd_port 1
                1490Matched shifter destination index 000000000 ... given as 00000014
                1490Received index as          0 and rd_port 2
                1490Matched shifter destination index 000000000 ... given as 00000014
                1490Received index as         16 and rd_port 3
                1490Matched ALU destination index 10 ... given as 00000014
                1490==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1490zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1490PC_nxt before =         20
Normal PC update!
                1490PC_nxt after =         24
PC_nxt =         24
                1490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1490Received index as          0 and rd_port 0
                1490Register read on rd_port 0
                1490Reg read -> Returned value 0000000d
                1490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1490Received index as          0 and rd_port 1
                1490Register read on rd_port 1
                1490Reg read -> Returned value 0000000d
                1490Received index as          0 and rd_port 2
                1490Register read on rd_port 2
                1490Reg read -> Returned value 0000000d
                1490Received index as         16 and rd_port 3
                1490Matched ALU destination index 10 ... given as 00000014
                1490==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1490zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1490zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1490zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1490Received index as          0 and rd_port 0
                1490Register read on rd_port 0
                1490Reg read -> Returned value 0000000d
                1490zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1490Received index as          0 and rd_port 1
                1490Register read on rd_port 1
                1490Reg read -> Returned value 0000000d
                1490Received index as          0 and rd_port 2
                1490Register read on rd_port 2
                1490Reg read -> Returned value 0000000d
                1490Received index as         16 and rd_port 3
                1490Matched ALU destination index 10 ... given as 00000014
                1490PC next =         24 PC current =         20
                1510zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1510Received index as          0 and rd_port 0
                1510Register read on rd_port 0
                1510Reg read -> Returned value 0000000d
                1510zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1510Received index as          0 and rd_port 1
                1510Register read on rd_port 1
                1510Reg read -> Returned value 0000000d
                1510Received index as          0 and rd_port 2
                1510Register read on rd_port 2
                1510Reg read -> Returned value 0000000d
                1510Received index as          0 and rd_port 3
                1510Register read on rd_port 3
                1510Reg read -> Returned value 00000014
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1510==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1510zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1510zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1510PC_nxt before =         24
Normal PC update!
                1510PC_nxt after =         28
PC_nxt =         28
                1510zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1510Received index as          0 and rd_port 0
                1510Register read on rd_port 0
                1510Reg read -> Returned value 0000000d
                1510zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1510Received index as          0 and rd_port 1
                1510Register read on rd_port 1
                1510Reg read -> Returned value 0000000d
                1510Received index as          0 and rd_port 2
                1510Register read on rd_port 2
                1510Reg read -> Returned value 0000000d
                1510Received index as          0 and rd_port 3
                1510Register read on rd_port 3
                1510Reg read -> Returned value 0000000d
                1510zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1510PC next =         28 PC current =         24
                1530PC_nxt before =         28
Normal PC update!
                1530PC_nxt after =         32
PC_nxt =         32
                1530zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1530Received index as         15 and rd_port 0
                1530PC requested... given as 0000001c
                1530zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1530Received index as 8589934590 and rd_port 1
                1530Constant detect. Returning fffffffe
                1530Received index as 4294967298 and rd_port 2
                1530Constant detect. Returning 00000002
                1530Received index as          0 and rd_port 3
                1530Register read on rd_port 3
                1530Reg read -> Returned value 0000000d
                1530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1530zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1530zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1530Received index as         15 and rd_port 0
                1530PC requested... given as 0000001c
                1530zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1530Received index as 8589934590 and rd_port 1
                1530Constant detect. Returning fffffffe
                1530Received index as 4294967298 and rd_port 2
                1530Constant detect. Returning 00000002
                1530Received index as          0 and rd_port 3
                1530Register read on rd_port 3
                1530Reg read -> Returned value 0000000d
                1530zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1530PC next =         32 PC current =         28
                1550zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1550Received index as          0 and rd_port 0
                1550Register read on rd_port 0
                1550Reg read -> Returned value 0000001c
                1550zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1550Received index as          0 and rd_port 1
                1550Register read on rd_port 1
                1550Reg read -> Returned value xxxxxxxx
                1550Received index as 4294967296 and rd_port 2
                1550Constant detect. Returning 00000000
                1550Received index as          0 and rd_port 3
                1550Register read on rd_port 3
                1550Reg read -> Returned value 0000000d
                1550==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1550zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1550zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1550PC_nxt before =         32
Normal PC update!
                1550PC_nxt after =         36
PC_nxt =         36
                1550zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1550Received index as          0 and rd_port 0
                1550Register read on rd_port 0
                1550Reg read -> Returned value 0000000d
                1550zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1550Received index as          0 and rd_port 1
                1550Register read on rd_port 1
                1550Reg read -> Returned value 0000000d
                1550Received index as 4294967296 and rd_port 2
                1550Constant detect. Returning 00000000
                1550Received index as          0 and rd_port 3
                1550Register read on rd_port 3
                1550Reg read -> Returned value 0000000d
                1550PC next =         36 PC current =         32
                1570PC_nxt before =         36
Normal PC update!
                1570PC_nxt after =         40
PC_nxt =         40
                1570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1570Received index as          0 and rd_port 0
                1570Register read on rd_port 0
                1570Reg read -> Returned value 0000000d
                1570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1570Received index as          0 and rd_port 1
                1570Register read on rd_port 1
                1570Reg read -> Returned value 0000000d
                1570Received index as 4294967296 and rd_port 2
                1570Constant detect. Returning 00000000
                1570Received index as          0 and rd_port 3
                1570Register read on rd_port 3
                1570Reg read -> Returned value 0000000d
                1570ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1570==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1570Received index as          0 and rd_port 0
                1570Register read on rd_port 0
                1570Reg read -> Returned value 0000000d
                1570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1570Received index as          0 and rd_port 1
                1570Register read on rd_port 1
                1570Reg read -> Returned value 0000000d
                1570Received index as 4294967296 and rd_port 2
                1570Constant detect. Returning 00000000
                1570Received index as          0 and rd_port 3
                1570Register read on rd_port 3
                1570Reg read -> Returned value 0000000d
                1570PC_nxt before =         36
Clear from ALU!
                1570PC_nxt after =     106496
PC_nxt =     106496
                1570ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570PC_nxt before =         36
Clear from ALU!
                1570PC_nxt after =         20
PC_nxt =         20
                1570==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1570Received index as          0 and rd_port 0
                1570Register read on rd_port 0
                1570Reg read -> Returned value 0000000d
                1570zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1570Received index as          0 and rd_port 1
                1570Register read on rd_port 1
                1570Reg read -> Returned value 0000000d
                1570Received index as 4294967296 and rd_port 2
                1570Constant detect. Returning 00000000
                1570Received index as          0 and rd_port 3
                1570Register read on rd_port 3
                1570Reg read -> Returned value 0000000d
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1570zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1570PC next =         20 PC current =         36
                1590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1590zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1590Received index as          0 and rd_port 0
                1590Register read on rd_port 0
                1590Reg read -> Returned value 0000000d
                1590zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1590Received index as          0 and rd_port 1
                1590Register read on rd_port 1
                1590Reg read -> Returned value 0000000d
                1590Received index as          0 and rd_port 2
                1590Register read on rd_port 2
                1590Reg read -> Returned value 0000000d
                1590Received index as         16 and rd_port 3
                1590Matched ALU destination index 10 ... given as 00000014
                1590PC_nxt before =         20
Normal PC update!
                1590PC_nxt after =         24
PC_nxt =         24
                1590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1590zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1590Received index as          0 and rd_port 0
                1590Register read on rd_port 0
                1590Reg read -> Returned value 0000000d
                1590zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1590Received index as          0 and rd_port 1
                1590Register read on rd_port 1
                1590Reg read -> Returned value 0000000d
                1590Received index as          0 and rd_port 2
                1590Register read on rd_port 2
                1590Reg read -> Returned value 0000000d
                1590Received index as         16 and rd_port 3
                1590Matched ALU destination index 10 ... given as 00000014
                1590==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1590zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1590zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1590PC next =         24 PC current =         20
                1610zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1610Received index as          0 and rd_port 0
                1610Register read on rd_port 0
                1610Reg read -> Returned value 0000000d
                1610zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1610Received index as          0 and rd_port 1
                1610Register read on rd_port 1
                1610Reg read -> Returned value 0000000d
                1610Received index as          0 and rd_port 2
                1610Register read on rd_port 2
                1610Reg read -> Returned value 0000000d
                1610Received index as          0 and rd_port 3
                1610Register read on rd_port 3
                1610Reg read -> Returned value 00000014
                1610PC_nxt before =         24
Normal PC update!
                1610PC_nxt after =         28
PC_nxt =         28
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1610==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1610zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1610zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1610zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1610Received index as          0 and rd_port 0
                1610Register read on rd_port 0
                1610Reg read -> Returned value 0000000d
                1610zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1610Received index as          0 and rd_port 1
                1610Register read on rd_port 1
                1610Reg read -> Returned value 0000000d
                1610Received index as          0 and rd_port 2
                1610Register read on rd_port 2
                1610Reg read -> Returned value 0000000d
                1610Received index as          0 and rd_port 3
                1610Register read on rd_port 3
                1610Reg read -> Returned value 0000000d
                1610zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1610PC next =         28 PC current =         24
                1630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1630zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1630PC_nxt before =         28
Normal PC update!
                1630PC_nxt after =         32
PC_nxt =         32
                1630zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1630Received index as         15 and rd_port 0
                1630PC requested... given as 0000001c
                1630zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1630Received index as 8589934590 and rd_port 1
                1630Constant detect. Returning fffffffe
                1630Received index as 4294967298 and rd_port 2
                1630Constant detect. Returning 00000002
                1630Received index as          0 and rd_port 3
                1630Register read on rd_port 3
                1630Reg read -> Returned value 0000000d
                1630zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1630Received index as         15 and rd_port 0
                1630PC requested... given as 0000001c
                1630zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1630Received index as 8589934590 and rd_port 1
                1630Constant detect. Returning fffffffe
                1630Received index as 4294967298 and rd_port 2
                1630Constant detect. Returning 00000002
                1630Received index as          0 and rd_port 3
                1630Register read on rd_port 3
                1630Reg read -> Returned value 0000000d
                1630zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1630PC next =         32 PC current =         28
                1650zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1650Received index as          0 and rd_port 0
                1650Register read on rd_port 0
                1650Reg read -> Returned value 0000001c
                1650zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1650Received index as          0 and rd_port 1
                1650Register read on rd_port 1
                1650Reg read -> Returned value xxxxxxxx
                1650Received index as 4294967296 and rd_port 2
                1650Constant detect. Returning 00000000
                1650Received index as          0 and rd_port 3
                1650Register read on rd_port 3
                1650Reg read -> Returned value 0000000d
                1650==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1650zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1650zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1650PC_nxt before =         32
Normal PC update!
                1650PC_nxt after =         36
PC_nxt =         36
                1650zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1650Received index as          0 and rd_port 0
                1650Register read on rd_port 0
                1650Reg read -> Returned value 0000000d
                1650zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1650Received index as          0 and rd_port 1
                1650Register read on rd_port 1
                1650Reg read -> Returned value 0000000d
                1650Received index as 4294967296 and rd_port 2
                1650Constant detect. Returning 00000000
                1650Received index as          0 and rd_port 3
                1650Register read on rd_port 3
                1650Reg read -> Returned value 0000000d
                1650PC next =         36 PC current =         32
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1670ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1670Received index as          0 and rd_port 0
                1670Register read on rd_port 0
                1670Reg read -> Returned value 0000000d
                1670zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1670Received index as          0 and rd_port 1
                1670Register read on rd_port 1
                1670Reg read -> Returned value 0000000d
                1670Received index as 4294967296 and rd_port 2
                1670Constant detect. Returning 00000000
                1670Received index as          0 and rd_port 3
                1670Register read on rd_port 3
                1670Reg read -> Returned value 0000000d
                1670PC_nxt before =         36
Clear from ALU!
                1670PC_nxt after =     106496
PC_nxt =     106496
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1670ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670PC_nxt before =         36
Clear from ALU!
                1670PC_nxt after =         20
PC_nxt =         20
                1670==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1670zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1670zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1670Received index as          0 and rd_port 0
                1670Register read on rd_port 0
                1670Reg read -> Returned value 0000000d
                1670zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1670Received index as          0 and rd_port 1
                1670Register read on rd_port 1
                1670Reg read -> Returned value 0000000d
                1670Received index as 4294967296 and rd_port 2
                1670Constant detect. Returning 00000000
                1670Received index as          0 and rd_port 3
                1670Register read on rd_port 3
                1670Reg read -> Returned value 0000000d
                1670PC next =         20 PC current =         36
                1690PC_nxt before =         20
Clear from ALU!
                1690PC_nxt after =         20
PC_nxt =         20
                1690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1690Received index as          0 and rd_port 0
                1690Matched shifter destination index 000000000 ... given as 00000014
                1690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1690Received index as          0 and rd_port 1
                1690Matched shifter destination index 000000000 ... given as 00000014
                1690Received index as          0 and rd_port 2
                1690Matched shifter destination index 000000000 ... given as 00000014
                1690Received index as         16 and rd_port 3
                1690Matched ALU destination index 10 ... given as 00000014
                1690==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1690zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1690PC_nxt before =         20
Normal PC update!
                1690PC_nxt after =         24
PC_nxt =         24
                1690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1690Received index as          0 and rd_port 0
                1690Register read on rd_port 0
                1690Reg read -> Returned value 0000000d
                1690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1690Received index as          0 and rd_port 1
                1690Register read on rd_port 1
                1690Reg read -> Returned value 0000000d
                1690Received index as          0 and rd_port 2
                1690Register read on rd_port 2
                1690Reg read -> Returned value 0000000d
                1690Received index as         16 and rd_port 3
                1690Matched ALU destination index 10 ... given as 00000014
                1690==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1690zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1690zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1690zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1690Received index as          0 and rd_port 0
                1690Register read on rd_port 0
                1690Reg read -> Returned value 0000000d
                1690zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1690Received index as          0 and rd_port 1
                1690Register read on rd_port 1
                1690Reg read -> Returned value 0000000d
                1690Received index as          0 and rd_port 2
                1690Register read on rd_port 2
                1690Reg read -> Returned value 0000000d
                1690Received index as         16 and rd_port 3
                1690Matched ALU destination index 10 ... given as 00000014
                1690PC next =         24 PC current =         20
                1710zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1710Received index as          0 and rd_port 0
                1710Register read on rd_port 0
                1710Reg read -> Returned value 0000000d
                1710zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1710Received index as          0 and rd_port 1
                1710Register read on rd_port 1
                1710Reg read -> Returned value 0000000d
                1710Received index as          0 and rd_port 2
                1710Register read on rd_port 2
                1710Reg read -> Returned value 0000000d
                1710Received index as          0 and rd_port 3
                1710Register read on rd_port 3
                1710Reg read -> Returned value 00000014
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1710==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1710zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1710zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1710PC_nxt before =         24
Normal PC update!
                1710PC_nxt after =         28
PC_nxt =         28
                1710zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1710Received index as          0 and rd_port 0
                1710Register read on rd_port 0
                1710Reg read -> Returned value 0000000d
                1710zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1710Received index as          0 and rd_port 1
                1710Register read on rd_port 1
                1710Reg read -> Returned value 0000000d
                1710Received index as          0 and rd_port 2
                1710Register read on rd_port 2
                1710Reg read -> Returned value 0000000d
                1710Received index as          0 and rd_port 3
                1710Register read on rd_port 3
                1710Reg read -> Returned value 0000000d
                1710zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1710PC next =         28 PC current =         24
                1730PC_nxt before =         28
Normal PC update!
                1730PC_nxt after =         32
PC_nxt =         32
                1730zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1730Received index as         15 and rd_port 0
                1730PC requested... given as 0000001c
                1730zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1730Received index as 8589934590 and rd_port 1
                1730Constant detect. Returning fffffffe
                1730Received index as 4294967298 and rd_port 2
                1730Constant detect. Returning 00000002
                1730Received index as          0 and rd_port 3
                1730Register read on rd_port 3
                1730Reg read -> Returned value 0000000d
                1730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1730zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1730zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1730Received index as         15 and rd_port 0
                1730PC requested... given as 0000001c
                1730zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1730Received index as 8589934590 and rd_port 1
                1730Constant detect. Returning fffffffe
                1730Received index as 4294967298 and rd_port 2
                1730Constant detect. Returning 00000002
                1730Received index as          0 and rd_port 3
                1730Register read on rd_port 3
                1730Reg read -> Returned value 0000000d
                1730zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1730PC next =         32 PC current =         28
                1750zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1750Received index as          0 and rd_port 0
                1750Register read on rd_port 0
                1750Reg read -> Returned value 0000001c
                1750zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1750Received index as          0 and rd_port 1
                1750Register read on rd_port 1
                1750Reg read -> Returned value xxxxxxxx
                1750Received index as 4294967296 and rd_port 2
                1750Constant detect. Returning 00000000
                1750Received index as          0 and rd_port 3
                1750Register read on rd_port 3
                1750Reg read -> Returned value 0000000d
                1750==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1750zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1750zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1750PC_nxt before =         32
Normal PC update!
                1750PC_nxt after =         36
PC_nxt =         36
                1750zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1750Received index as          0 and rd_port 0
                1750Register read on rd_port 0
                1750Reg read -> Returned value 0000000d
                1750zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1750Received index as          0 and rd_port 1
                1750Register read on rd_port 1
                1750Reg read -> Returned value 0000000d
                1750Received index as 4294967296 and rd_port 2
                1750Constant detect. Returning 00000000
                1750Received index as          0 and rd_port 3
                1750Register read on rd_port 3
                1750Reg read -> Returned value 0000000d
                1750PC next =         36 PC current =         32
                1770PC_nxt before =         36
Normal PC update!
                1770PC_nxt after =         40
PC_nxt =         40
                1770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1770Received index as          0 and rd_port 0
                1770Register read on rd_port 0
                1770Reg read -> Returned value 0000000d
                1770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1770Received index as          0 and rd_port 1
                1770Register read on rd_port 1
                1770Reg read -> Returned value 0000000d
                1770Received index as 4294967296 and rd_port 2
                1770Constant detect. Returning 00000000
                1770Received index as          0 and rd_port 3
                1770Register read on rd_port 3
                1770Reg read -> Returned value 0000000d
                1770ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1770==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1770Received index as          0 and rd_port 0
                1770Register read on rd_port 0
                1770Reg read -> Returned value 0000000d
                1770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1770Received index as          0 and rd_port 1
                1770Register read on rd_port 1
                1770Reg read -> Returned value 0000000d
                1770Received index as 4294967296 and rd_port 2
                1770Constant detect. Returning 00000000
                1770Received index as          0 and rd_port 3
                1770Register read on rd_port 3
                1770Reg read -> Returned value 0000000d
                1770PC_nxt before =         36
Clear from ALU!
                1770PC_nxt after =     106496
PC_nxt =     106496
                1770ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770PC_nxt before =         36
Clear from ALU!
                1770PC_nxt after =         20
PC_nxt =         20
                1770==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1770Received index as          0 and rd_port 0
                1770Register read on rd_port 0
                1770Reg read -> Returned value 0000000d
                1770zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1770Received index as          0 and rd_port 1
                1770Register read on rd_port 1
                1770Reg read -> Returned value 0000000d
                1770Received index as 4294967296 and rd_port 2
                1770Constant detect. Returning 00000000
                1770Received index as          0 and rd_port 3
                1770Register read on rd_port 3
                1770Reg read -> Returned value 0000000d
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1770zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1770PC next =         20 PC current =         36
                1790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1790zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1790Received index as          0 and rd_port 0
                1790Register read on rd_port 0
                1790Reg read -> Returned value 0000000d
                1790zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1790Received index as          0 and rd_port 1
                1790Register read on rd_port 1
                1790Reg read -> Returned value 0000000d
                1790Received index as          0 and rd_port 2
                1790Register read on rd_port 2
                1790Reg read -> Returned value 0000000d
                1790Received index as         16 and rd_port 3
                1790Matched ALU destination index 10 ... given as 00000014
                1790PC_nxt before =         20
Normal PC update!
                1790PC_nxt after =         24
PC_nxt =         24
                1790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1790zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1790Received index as          0 and rd_port 0
                1790Register read on rd_port 0
                1790Reg read -> Returned value 0000000d
                1790zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1790Received index as          0 and rd_port 1
                1790Register read on rd_port 1
                1790Reg read -> Returned value 0000000d
                1790Received index as          0 and rd_port 2
                1790Register read on rd_port 2
                1790Reg read -> Returned value 0000000d
                1790Received index as         16 and rd_port 3
                1790Matched ALU destination index 10 ... given as 00000014
                1790==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1790zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1790zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1790PC next =         24 PC current =         20
                1810zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1810Received index as          0 and rd_port 0
                1810Register read on rd_port 0
                1810Reg read -> Returned value 0000000d
                1810zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1810Received index as          0 and rd_port 1
                1810Register read on rd_port 1
                1810Reg read -> Returned value 0000000d
                1810Received index as          0 and rd_port 2
                1810Register read on rd_port 2
                1810Reg read -> Returned value 0000000d
                1810Received index as          0 and rd_port 3
                1810Register read on rd_port 3
                1810Reg read -> Returned value 00000014
                1810PC_nxt before =         24
Normal PC update!
                1810PC_nxt after =         28
PC_nxt =         28
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1810==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1810zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1810zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1810zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1810Received index as          0 and rd_port 0
                1810Register read on rd_port 0
                1810Reg read -> Returned value 0000000d
                1810zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1810Received index as          0 and rd_port 1
                1810Register read on rd_port 1
                1810Reg read -> Returned value 0000000d
                1810Received index as          0 and rd_port 2
                1810Register read on rd_port 2
                1810Reg read -> Returned value 0000000d
                1810Received index as          0 and rd_port 3
                1810Register read on rd_port 3
                1810Reg read -> Returned value 0000000d
                1810zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1810PC next =         28 PC current =         24
                1830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1830zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1830PC_nxt before =         28
Normal PC update!
                1830PC_nxt after =         32
PC_nxt =         32
                1830zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1830Received index as         15 and rd_port 0
                1830PC requested... given as 0000001c
                1830zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1830Received index as 8589934590 and rd_port 1
                1830Constant detect. Returning fffffffe
                1830Received index as 4294967298 and rd_port 2
                1830Constant detect. Returning 00000002
                1830Received index as          0 and rd_port 3
                1830Register read on rd_port 3
                1830Reg read -> Returned value 0000000d
                1830zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1830Received index as         15 and rd_port 0
                1830PC requested... given as 0000001c
                1830zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1830Received index as 8589934590 and rd_port 1
                1830Constant detect. Returning fffffffe
                1830Received index as 4294967298 and rd_port 2
                1830Constant detect. Returning 00000002
                1830Received index as          0 and rd_port 3
                1830Register read on rd_port 3
                1830Reg read -> Returned value 0000000d
                1830zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1830PC next =         32 PC current =         28
                1850zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1850Received index as          0 and rd_port 0
                1850Register read on rd_port 0
                1850Reg read -> Returned value 0000001c
                1850zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1850Received index as          0 and rd_port 1
                1850Register read on rd_port 1
                1850Reg read -> Returned value xxxxxxxx
                1850Received index as 4294967296 and rd_port 2
                1850Constant detect. Returning 00000000
                1850Received index as          0 and rd_port 3
                1850Register read on rd_port 3
                1850Reg read -> Returned value 0000000d
                1850==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1850zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1850zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1850PC_nxt before =         32
Normal PC update!
                1850PC_nxt after =         36
PC_nxt =         36
                1850zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1850Received index as          0 and rd_port 0
                1850Register read on rd_port 0
                1850Reg read -> Returned value 0000000d
                1850zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1850Received index as          0 and rd_port 1
                1850Register read on rd_port 1
                1850Reg read -> Returned value 0000000d
                1850Received index as 4294967296 and rd_port 2
                1850Constant detect. Returning 00000000
                1850Received index as          0 and rd_port 3
                1850Register read on rd_port 3
                1850Reg read -> Returned value 0000000d
                1850PC next =         36 PC current =         32
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =          0
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1870ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1870Received index as          0 and rd_port 0
                1870Register read on rd_port 0
                1870Reg read -> Returned value 0000000d
                1870zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1870Received index as          0 and rd_port 1
                1870Register read on rd_port 1
                1870Reg read -> Returned value 0000000d
                1870Received index as 4294967296 and rd_port 2
                1870Constant detect. Returning 00000000
                1870Received index as          0 and rd_port 3
                1870Register read on rd_port 3
                1870Reg read -> Returned value 0000000d
                1870PC_nxt before =         36
Clear from ALU!
                1870PC_nxt after =     106496
PC_nxt =     106496
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1870ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870PC_nxt before =         36
Clear from ALU!
                1870PC_nxt after =         20
PC_nxt =         20
                1870==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1870zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1870zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1870Received index as          0 and rd_port 0
                1870Register read on rd_port 0
                1870Reg read -> Returned value 0000000d
                1870zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1870Received index as          0 and rd_port 1
                1870Register read on rd_port 1
                1870Reg read -> Returned value 0000000d
                1870Received index as 4294967296 and rd_port 2
                1870Constant detect. Returning 00000000
                1870Received index as          0 and rd_port 3
                1870Register read on rd_port 3
                1870Reg read -> Returned value 0000000d
                1870PC next =         20 PC current =         36
                1890PC_nxt before =         20
Clear from ALU!
                1890PC_nxt after =         20
PC_nxt =         20
                1890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1890Received index as          0 and rd_port 0
                1890Matched shifter destination index 000000000 ... given as 00000014
                1890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1890Received index as          0 and rd_port 1
                1890Matched shifter destination index 000000000 ... given as 00000014
                1890Received index as          0 and rd_port 2
                1890Matched shifter destination index 000000000 ... given as 00000014
                1890Received index as         16 and rd_port 3
                1890Matched ALU destination index 10 ... given as 00000014
                1890==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1890zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1890PC_nxt before =         20
Normal PC update!
                1890PC_nxt after =         24
PC_nxt =         24
                1890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1890Received index as          0 and rd_port 0
                1890Register read on rd_port 0
                1890Reg read -> Returned value 0000000d
                1890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1890Received index as          0 and rd_port 1
                1890Register read on rd_port 1
                1890Reg read -> Returned value 0000000d
                1890Received index as          0 and rd_port 2
                1890Register read on rd_port 2
                1890Reg read -> Returned value 0000000d
                1890Received index as         16 and rd_port 3
                1890Matched ALU destination index 10 ... given as 00000014
                1890==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1890zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1890zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1890zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1890Received index as          0 and rd_port 0
                1890Register read on rd_port 0
                1890Reg read -> Returned value 0000000d
                1890zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1890Received index as          0 and rd_port 1
                1890Register read on rd_port 1
                1890Reg read -> Returned value 0000000d
                1890Received index as          0 and rd_port 2
                1890Register read on rd_port 2
                1890Reg read -> Returned value 0000000d
                1890Received index as         16 and rd_port 3
                1890Matched ALU destination index 10 ... given as 00000014
                1890PC next =         24 PC current =         20
                1910zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1910Received index as          0 and rd_port 0
                1910Register read on rd_port 0
                1910Reg read -> Returned value 0000000d
                1910zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1910Received index as          0 and rd_port 1
                1910Register read on rd_port 1
                1910Reg read -> Returned value 0000000d
                1910Received index as          0 and rd_port 2
                1910Register read on rd_port 2
                1910Reg read -> Returned value 0000000d
                1910Received index as          0 and rd_port 3
                1910Register read on rd_port 3
                1910Reg read -> Returned value 00000014
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1910==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1910zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1910zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1910PC_nxt before =         24
Normal PC update!
                1910PC_nxt after =         28
PC_nxt =         28
                1910zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1910Received index as          0 and rd_port 0
                1910Register read on rd_port 0
                1910Reg read -> Returned value 0000000d
                1910zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1910Received index as          0 and rd_port 1
                1910Register read on rd_port 1
                1910Reg read -> Returned value 0000000d
                1910Received index as          0 and rd_port 2
                1910Register read on rd_port 2
                1910Reg read -> Returned value 0000000d
                1910Received index as          0 and rd_port 3
                1910Register read on rd_port 3
                1910Reg read -> Returned value 0000000d
                1910zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                1910PC next =         28 PC current =         24
                1930PC_nxt before =         28
Normal PC update!
                1930PC_nxt after =         32
PC_nxt =         32
                1930zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1930Received index as         15 and rd_port 0
                1930PC requested... given as 0000001c
                1930zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1930Received index as 8589934590 and rd_port 1
                1930Constant detect. Returning fffffffe
                1930Received index as 4294967298 and rd_port 2
                1930Constant detect. Returning 00000002
                1930Received index as          0 and rd_port 3
                1930Register read on rd_port 3
                1930Reg read -> Returned value 0000000d
                1930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                1930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1930zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1930zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1930Received index as         15 and rd_port 0
                1930PC requested... given as 0000001c
                1930zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1930Received index as 8589934590 and rd_port 1
                1930Constant detect. Returning fffffffe
                1930Received index as 4294967298 and rd_port 2
                1930Constant detect. Returning 00000002
                1930Received index as          0 and rd_port 3
                1930Register read on rd_port 3
                1930Reg read -> Returned value 0000000d
                1930zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_data_processing: Normal DP decode...
zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.process_instruction_specified_shift Process instruction specified shift...
                1930PC next =         32 PC current =         28
                1950zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1950Received index as          0 and rd_port 0
                1950Register read on rd_port 0
                1950Reg read -> Returned value 0000001c
                1950zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1950Received index as          0 and rd_port 1
                1950Register read on rd_port 1
                1950Reg read -> Returned value xxxxxxxx
                1950Received index as 4294967296 and rd_port 2
                1950Constant detect. Returning 00000000
                1950Received index as          0 and rd_port 3
                1950Register read on rd_port 3
                1950Reg read -> Returned value 0000000d
                1950==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         15 value from issue =         28 index from this stage =  0 result from alu =          0
                1950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1950zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         28
                1950zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1950PC_nxt before =         32
Normal PC update!
                1950PC_nxt after =         36
PC_nxt =         36
                1950zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1950Received index as          0 and rd_port 0
                1950Register read on rd_port 0
                1950Reg read -> Returned value 0000000d
                1950zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1950Received index as          0 and rd_port 1
                1950Register read on rd_port 1
                1950Reg read -> Returned value 0000000d
                1950Received index as 4294967296 and rd_port 2
                1950Constant detect. Returning 00000000
                1950Received index as          0 and rd_port 3
                1950Register read on rd_port 3
                1950Reg read -> Returned value 0000000d
                1950PC next =         36 PC current =         32
                1970PC_nxt before =         36
Normal PC update!
                1970PC_nxt after =         40
PC_nxt =         40
                1970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1970Received index as          0 and rd_port 0
                1970Register read on rd_port 0
                1970Reg read -> Returned value 0000000d
                1970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1970Received index as          0 and rd_port 1
                1970Register read on rd_port 1
                1970Reg read -> Returned value 0000000d
                1970Received index as 4294967296 and rd_port 2
                1970Constant detect. Returning 00000000
                1970Received index as          0 and rd_port 3
                1970Register read on rd_port 3
                1970Reg read -> Returned value 0000000d
                1970ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1970==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =     106496
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1970Received index as          0 and rd_port 0
                1970Register read on rd_port 0
                1970Reg read -> Returned value 0000000d
                1970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1970Received index as          0 and rd_port 1
                1970Register read on rd_port 1
                1970Reg read -> Returned value 0000000d
                1970Received index as 4294967296 and rd_port 2
                1970Constant detect. Returning 00000000
                1970Received index as          0 and rd_port 3
                1970Register read on rd_port 3
                1970Reg read -> Returned value 0000000d
                1970PC_nxt before =         36
Clear from ALU!
                1970PC_nxt after =     106496
PC_nxt =     106496
                1970ALU :: A quick branch! Possibly a BX i_switch_ff = 0...
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970PC_nxt before =         36
Clear from ALU!
                1970PC_nxt after =         20
PC_nxt =         20
                1970==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1970Received index as          0 and rd_port 0
                1970Register read on rd_port 0
                1970Reg read -> Returned value 0000000d
                1970zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1970Received index as          0 and rd_port 1
                1970Register read on rd_port 1
                1970Reg read -> Returned value 0000000d
                1970Received index as 4294967296 and rd_port 2
                1970Constant detect. Returning 00000000
                1970Received index as          0 and rd_port 3
                1970Register read on rd_port 3
                1970Reg read -> Returned value 0000000d
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage = 15 result from alu =         20
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                1970zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         13
                1970PC next =         20 PC current =         36
                1990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         20
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                1990zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1990Received index as          0 and rd_port 0
                1990Register read on rd_port 0
                1990Reg read -> Returned value 0000000d
                1990zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1990Received index as          0 and rd_port 1
                1990Register read on rd_port 1
                1990Reg read -> Returned value 0000000d
                1990Received index as          0 and rd_port 2
                1990Register read on rd_port 2
                1990Reg read -> Returned value 0000000d
                1990Received index as         16 and rd_port 3
                1990Matched ALU destination index 10 ... given as 00000014
                1990PC_nxt before =         20
Normal PC update!
                1990PC_nxt after =         24
PC_nxt =         24
                1990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =         24
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         24
                1990zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                1990Received index as          0 and rd_port 0
                1990Register read on rd_port 0
                1990Reg read -> Returned value 0000000d
                1990zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                1990Received index as          0 and rd_port 1
                1990Register read on rd_port 1
                1990Reg read -> Returned value 0000000d
                1990Received index as          0 and rd_port 2
                1990Register read on rd_port 2
                1990Reg read -> Returned value 0000000d
                1990Received index as         16 and rd_port 3
                1990Matched ALU destination index 10 ... given as 00000014
                1990==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1990zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =          0 index from this stage =  0 result from alu =          0
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                1990zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                1990PC next =         24 PC current =         20
                2010zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                2010Received index as          0 and rd_port 0
                2010Register read on rd_port 0
                2010Reg read -> Returned value 0000000d
                2010zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                2010Received index as          0 and rd_port 1
                2010Register read on rd_port 1
                2010Reg read -> Returned value 0000000d
                2010Received index as          0 and rd_port 2
                2010Register read on rd_port 2
                2010Reg read -> Returned value 0000000d
                2010Received index as          0 and rd_port 3
                2010Register read on rd_port 3
                2010Reg read -> Returned value 00000014
                2010PC_nxt before =         24
Normal PC update!
                2010PC_nxt after =         28
PC_nxt =         28
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =         16 value from issue =         20 index from this stage =  0 result from alu =          0
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => No changes!
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is         20
                2010==> zap_test.u_zap_top.u_zap_shifter_main: Resolving ALU source value...
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ================ resolve_conflict ==================
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: index from issue =          0 value from issue =         13 index from this stage =  0 result from alu =          0
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ====================================================
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: => Getting result from ALU!
                2010zap_test.u_zap_top.u_zap_shifter_main.resolve_conflict: ==> Final result is          0
                2010zap_test.u_zap_top.u_zap_shifter_main: ************** DONE RESOLVING ALU SOURCE VALUE *********************
                2010zap_test.u_zap_top.u_zap_issue_main: ########### Getting ALU source value... ##################
                2010Received index as          0 and rd_port 0
                2010Register read on rd_port 0
                2010Reg read -> Returned value 0000000d
                2010zap_test.u_zap_top.u_zap_issue_main: ################## DONE! ######################
                2010Received index as          0 and rd_port 1
                2010Register read on rd_port 1
                2010Reg read -> Returned value 0000000d
                2010Received index as          0 and rd_port 2
                2010Register read on rd_port 2
                2010Reg read -> Returned value 0000000d
                2010Received index as          0 and rd_port 3
                2010Register read on rd_port 3
                2010Reg read -> Returned value 0000000d
                2010zap_test.u_zap_top.u_zap_decode_main.u_zap_decode.decode_branch: B decode...
                2010PC next =         28 PC current =         24
